{"version":3,"sources":["components/TokenContext.js","components/RefreshTokenContext.js","images/logo_1_transparent.png","components/Login.js","components/Player.js","logo.svg","components/Party_components/Player.js","pages/PartyHome.js","hooks/useChat.js","components/SpotifyTrackMessage.js","components/SpotifySearch.js","components/ChatRoom.js","components/ChatUserSearch.js","pages/ChatHome.js","pages/Chat.js","components/Party_components/activeBox.js","components/Party_components/SongTab.js","components/Party_components/SearchBar.js","components/Party_components/SongQueue.js","hooks/useParty.js","components/PartyRoom.js","pages/Party.js","components/navBar.js","pages/PlayerPage.js","components/Home.js","components/Callback.js","App.js","reportWebVitals.js","index.js"],"names":["TokenContext","React","createContext","Login","className","src","logo","href","process","Player","props","backgroundStyles","backgroundImage","item","album","images","url","progressBarStyles","width","progress_ms","duration_ms","name","artists","is_playing","style","context","useContext","useState","SDK","setSDK","DeviceID","setDevice","useEffect","window","onSpotifyWebPlaybackSDKReady","SDK_object","SDK_ID","onLoad","player","Spotify","getOAuthToken","cb","currtoken","addListener","message","console","error","device_id","log","connect","PartyHome","roomName","setRoomName","history","useHistory","type","placeholder","value","onKeyDown","e","keyCode","push","onChange","event","target","to","NEW_CHAT_MESSAGE_EVENT","useChat","roomId","messages","setMessages","socketRef","useRef","current","socketIOClient","query","on","incomingMessage","isCurrentUser","senderId","id","disconnect","sendMessage","messageBody","emit","body","SpotifyTrackMessage","regex","image","setImage","songName","setSongName","artistName","setArtistName","songID","match","$","beforeSend","xhr","setRequestHeader","success","data","getSongImage","SpotifySearch","topResults","setTopResults","trackName","setTrackName","appendSongToMessage","song","textarea","document","getElementById","element","valueSetter","Object","getOwnPropertyDescriptor","set","prototype","getPrototypeOf","prototypeValueSetter","call","setNativeValue","dispatchEvent","Event","bubbles","length","dataType","tracks","items","forEach","autoComplete","slice","map","index","onClick","external_urls","spotify","ChatRoom","spotifyRegex","linkRegex","params","currUserID","setCurrUserID","newMessage","setNewMessage","currSong","setCurrSong","showPlayer","setShowPlayer","hitEnter","setEnter","check","setCheck","toggle","useCallback","updateState","a","retrieveDetailsFromServer","handleSendMessage","sendDetailsToServer","chats","setTimeout","scrollTop","payload","session","userID","content","axios","post","catch","err","alert","get","headers","responseType","then","res","i","sender_id","test","spotifyLinkSet","Set","spotifyLinks","Array","from","restofMessage","replace","isRestOfMessageEmpty","spotifyLink","m_key","concat","setSpotifyURI","isMessageLink","words","split","word","j","isLink","rel","preventDefault","onKeyPress","key","token","uris","autoPlay","showSaveIcon","SpotifyUserSearch","setUserID","userDisplayName","setUserDisplayName","userImage","setUserImage","sessionID","setSessionID","curUserID","setcurUserID","undefined","display_name","getSession","user1","user2","session_id","ChatHome","Chat","exact","path","component","Home","PlayerPage","Party","ActiveBox","members","usersInRoom","setUsers","SongTab","setsong","artist","SearchBar","api","handleSongSend","currentApi","setApi","useForSearch","setUseSearch","result","setresult","searchTracks","track","songUrl","uri","FormControl","SongQueue","SS_event","Get_topList","useParty","Username","setname","roomNum","setroomNum","Userimage","setimage","memberlist","setMemberlist","songList","setsonglist","currentSong","setcurrentSong","onbeforeunload","room","setAPi","setAccessToken","getMe","users","songs","peakTop","sendSong","nextSong","SDKPlay","sp","SpotifyWebApi","PartyRoom","spotifyApi","member","setmember","localsongList","setSonglist","localSDK","party","useLayoutEffect","getCurrentState","state","track_window","current_track","interv","setInterval","paused","clearInterval","min","max","setVolume","NavBar","displayname","setDisplayName","imageurl","setImageUrl","setItem","setIs_playing","setProgress_ms","NoData","setNoData","didErrorOccur","setDidErrorOccur","alt","class","Callback","hash","location","substring","reduce","initial","parts","decodeURIComponent","access_token","refresh","refresh_token","updateToken","JustToken","App","setCurrToken","refreshcurrtoken","setRefreshCurrToken","fetchData","sessionStorage","getItem","Provider","RefreshTokenContext","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.1d70fc50.chunk.js","sourcesContent":["import React from 'react';\n\nconst TokenContext = React.createContext();\n\nexport default TokenContext;","import React from 'react';\n\nconst TokenContext = React.createContext();\n\nexport default TokenContext;","export default __webpack_public_path__ + \"static/media/logo_1_transparent.f6b8161d.png\";","import React from \"react\";\nimport './Login.css';\nimport logo from '../images/logo_1_transparent.png'\n\n\n\n// export const authEndpoint = 'https://accounts.spotify.com/authorize';\n\n// const clientId = \"07edde060f0f46bf82f2a7f621354d2a\"\n// const redirectUri = \"http://localhost:3000/callback\"\n// const scopes = [\n//   \"user-read-private\",\n//   \"user-read-currently-playing\",\n//   \"user-read-email\",\n//   \"user-library-read\",\n//   \"streaming\",\n//   \"user-read-recently-played\",\n//   \"user-top-read\",\n//   \"user-modify-playback-state\",\n//   \"user-read-playback-state\",\n//   \"user-library-modify\",\n// ]\n\n\n  // href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\n //   \"%20\"\n // )}&response_type=token&show_dialog=true`}\n\nfunction Login() {\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"head\">AuxSwap</h1>\n        <img src={logo} className=\"mainLogo\" />\n          <body className=\"bod\">\n            A web application using Spotify. <br></br>\n            Listen together and chat with your friends!\n          \n          </body>\n          {/* <header className=\"App-header\"> */}\n              <a className=\"Login-button\" href={`${process.env.REACT_APP_HOST}/auth/login`} >\n                Login to Spotify\n              </a>\n          {/* </header> */}\n      </div>\n    );\n\n\n}\n\nexport default Login","//credit: https://levelup.gitconnected.com/how-to-build-a-spotify-player-with-react-in-15-minutes-7e01991bc4b6\n//THIS IS ONLY A PLACEHOLDER FOR NOW. THIS COMPONENT WILL NOT MAKE INTO THE FINAL VERSION OF AUXSWAP\n\n\nimport React from \"react\";\nimport \"./Player.css\";\nconst Player = props => {\n  const backgroundStyles = {\n    backgroundImage:`url(${props.item.album.images[0].url})`,\n  };\n  \n  const progressBarStyles = {\n    width: (props.progress_ms * 100 / props.item.duration_ms) + '%'\n  };\n  \n  return (\n    <div className=\"App\">\n      <div className=\"main-wrapper\">\n        <div className=\"now-playing__img\">\n          <img src={props.item.album.images[0].url} />\n        </div>\n        <div className=\"now-playing__side\">\n          <div className=\"now-playing__name\">{props.item.name}</div>\n          <div className=\"now-playing__artist\">\n            {props.item.artists[0].name}\n          </div>\n          <div className=\"now-playing__status\">\n            {props.is_playing ? \"Playing\" : \"Paused\"}\n          </div>\n          <div className=\"progress\">\n            <div\n              className=\"progress__bar\"\n              style={progressBarStyles}\n            />\n          </div>\n        </div>\n        <div className=\"background\" style={backgroundStyles} />{\" \"}\n      </div>\n    </div>\n  );\n}\nexport default Player;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {useEffect,useContext,useState} from 'react'\nimport Script from 'react-load-script'\nimport TokenContext from '../TokenContext';\n\nexport default function Player() {\n    \n    const context = useContext(TokenContext)\n    const [SDK,setSDK]=useState()\n    const [DeviceID,setDevice]=useState()\n\n    useEffect(()=>{\n        window.onSpotifyWebPlaybackSDKReady=()=>{\n            return {SDK_object:SDK,SDK_ID:DeviceID}\n         }\n    })\n    function handleLoad(){\n        \n        const player = new window.Spotify.Player({\n            name:'AuxSwap',\n            getOAuthToken: cb=>{cb(context.currtoken);}\n        });\n        //console.log(player)\n        player.addListener('initialization_error', ({ message }) => { console.error(message); });\n        player.addListener('authentication_error', ({ message }) => { console.error(message); });\n        player.addListener('account_error', ({ message }) => { console.error(message); });\n        player.addListener('playback_error', ({ message }) => { console.error(message); });\n\n        // Playback status updates\n        //player.addListener('player_state_changed', state => { console.log(state);  });\n\n    // Ready\n        player.addListener('ready', ({ device_id }) => {\n        console.log('Ready with Device ID', device_id);\n        setDevice(device_id)\n        });\n        // Not Ready\n        player.addListener('not_ready', ({ device_id }) => {\n        console.log('Device ID has gone offline', device_id);\n        });\n        player.connect()\n        setSDK(player)\n    }\n    return (\n        <div>\n            <Script \n                url=\"https://sdk.scdn.co/spotify-player.js\" \n                onLoad={handleLoad}\n                />\n        </div>\n    )\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\n\nimport \"./PartyHome.css\";\nimport Player from '../components/Party_components/Player'\nconst PartyHome = () => {\n  const [roomName, setRoomName] = React.useState(\"\");\n  const history = useHistory();\n\n  const handleRoomNameChange = (event) => {\n    setRoomName(event.target.value);\n  };\n\nconst handleClick = () => {\n  history.push(`/party/${roomName}`);\n}\n\nconst handleEnter = e => {    //handle enter function\n  if (e.keyCode == 13) {      //if the user hits enter\n    handleClick()       //call the send message function (basically hit send button)\n  }\n};\n\n  return (\n    <div>\n      <Player />\n      <div className=\"home-container\">\n      <input\n        type=\"text\"\n        placeholder=\"Room\"\n        value={roomName}\n        onKeyDown={handleEnter}\n        onChange={handleRoomNameChange}\n        className=\"text-input-field\"\n      />\n      <Link to={`/party/${roomName}`} className=\"enter-room-button\">\n        Join Party\n      </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default PartyHome;\n","import { useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\n\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\";\nconst SOCKET_SERVER_URL = process.env.REACT_APP_HOST;\n\nconst useChat = (roomId) => {\n  const [messages, setMessages] = useState([]);\n  const socketRef = useRef();\n  \n  const deleteMessages = () => {\n    setMessages([]);\n  };\n\n  useEffect(() => {\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\n      query: { roomId },\n    });\n\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\n      const incomingMessage = {\n        ...message,\n        isCurrentUser: message.senderId === socketRef.current.id,\n      };\n      setMessages((messages) => [...messages, incomingMessage]);\n    });\n\n    return () => {\n      socketRef.current.disconnect();\n    };\n  }, [roomId]);\n\n\n  const sendMessage = (messageBody) => {\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\n      body: messageBody,\n      senderId: socketRef.current.id,\n    });\n  };\n\n  return { messages, sendMessage, setMessages };\n};\n\nexport default useChat;","import React, { useContext, useEffect, useState } from \"react\";\nimport * as $ from \"jquery\";\nimport './SpotifyTrackMessage.css';\nimport TokenContext from './TokenContext';\n\n\n\nconst SpotifyTrackMessage = (props) => {\nconst context = useContext(TokenContext);  \n const regex = /^(spotify:track:|https:\\/\\/[a-z]+\\.spotify\\.com\\/track\\/)([0-9a-z-A-Z]{22})/;\n const [image, setImage] = React.useState(\"\");\n const [songName, setSongName] = React.useState(\"\");\n const [artistName, setArtistName] = React.useState(\"\");\n\n \n const getSongImage = (message) => {\n    const array = message.match(regex);\n    const songID = array[2];\n    $.ajax({\n    url: `https://api.spotify.com/v1/tracks/${songID}`,\n    type: \"GET\",\n    beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + context.currtoken);\n    },\n    success: data => {\n      if(!data){\n        setImage(\"https://i.pinimg.com/originals/d4/e3/60/d4e3604d2811dbe178801f48e6a2ae69.jpg\");\n      }\n        setImage(data.album.images[0].url);\n        setSongName(data.name);\n        setArtistName(data.artists[0].name);\n    },\n    error: error => {\n      console.log(error);\n        setImage(\"https://i.pinimg.com/originals/d4/e3/60/d4e3604d2811dbe178801f48e6a2ae69.jpg\");\n    }\n  });\n  }\n  useEffect(() => {\n      getSongImage(props.message);\n},[]);\n    return(\n      <div className=\"song-message-container\">\n        <img className=\"search-images\" src={image} />\n        <div className=\"song-name\">{songName}</div>\n        <div className=\"song-artist\">{artistName}</div>\n\n      </div>\n    )\n}\n\nexport default SpotifyTrackMessage","import React, { useContext, useEffect, useState } from \"react\";\nimport * as $ from \"jquery\";\nimport './SpotifySearch.css';\nimport TokenContext from './TokenContext'\nimport SpotifyPlayer from 'react-spotify-web-playback';\n\nconst SpotifySearch = (props) => {\n    const context = useContext(TokenContext);  \n    const [topResults, setTopResults] = React.useState([]);\n    const [trackName, setTrackName] = React.useState(\"\")\n    const numSearchResults = 5; //number of results we want to return\n\n    // a workaround to programatically trigger the onChange event of the\n    // new-message-input-field, so that it sets the new message\n    function setNativeValue(element, value) {\n        const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n        const prototype = Object.getPrototypeOf(element);\n        const prototypeValueSetter = Object.getOwnPropertyDescriptor(prototype, 'value').set;\n        \n        if (valueSetter && valueSetter !== prototypeValueSetter) {\n            prototypeValueSetter.call(element, value);\n        } else {\n          valueSetter.call(element, value);\n        }\n      }\n    \n    const appendSongToMessage = (song) => {\n        let textarea = document.getElementById(\"new-message-input-field\")\n        setNativeValue(textarea, song + \" \" + textarea.value );\n        textarea.dispatchEvent(new Event('input', { bubbles: true }));\n    }\n\n    const getSongSearch = (props) => {\n        setTopResults([])\n        topResults.length = 0\n\n        if(trackName != \"\")\n        {\n        $.ajax({\n        url: `https://api.spotify.com/v1/search?q=${trackName}&type=track&limit=${numSearchResults}&offset=0`,\n        type: \"GET\",\n        beforeSend: xhr => {\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + context.currtoken);\n        },\n        dataType: \"json\",\n       \n        success: data => {\n            if(!data){\n              \n            }\n            // console.log(data);\n            data.tracks.items.forEach(element => {\n                setTopResults(topResults => [...topResults, element])\n            });   \n        },\n        error: error => {\n          console.log(error);\n        }\n      });\n        }\n      }\n      useEffect(() => {\n        // if someone types fast enough, this can get up to length 10, due to asynchronous issues\n        topResults.length = 0\n        setTopResults([])\n        // setTrackName(document.getElementById('searchbar').value)\n        getSongSearch(props);\n\n\n    },[trackName]);\n    return(\n        <div>\n        <br></br>\n            <input placeholder=\"Search for a song\" type=\"search\" id=\"searchbar\" autoComplete=\"off\" className=\"song-searchbar\" onChange={() => {setTopResults([]);topResults.length=0; setTrackName(document.getElementById('searchbar').value);}} />\n        <div className=\"result-container\">\n          <ul className=\"result-list\">\n              \n                  {topResults.slice(0, numSearchResults).map(index => {\n\n                      return <li className=\"song-info-list-item\">\n                      <div>\n                        <img className=\"search-images\" key={index.external_urls.spotify} src={index.album.images[0].url} onClick={() => {appendSongToMessage(index.external_urls.spotify);setTopResults([]);topResults.length=0;document.getElementById('searchbar').value=\"\"}}/>\n                        {/* <div className=\"song-name\">{index.name}<br></br>{index.artists[0].name}</div> */}\n                        <div className=\"song-name\">{index.name}</div>\n                        <div className=\"song-artist\">{index.artists[0].name}</div>\n\n                      </div>\n                      </li>\n\n\n                  })}\n                  \n              \n          </ul>\n        </div>\n      </div>\n    )\n        \n    }\n    \n    export default SpotifySearch","import React, { useContext, useEffect} from \"react\";\nimport SpotifyPlayer from 'react-spotify-web-playback';\nimport \"./ChatRoom.css\";\nimport useChat from \"../hooks/useChat\";\nimport TokenContext from './TokenContext';\nimport SpotifyTrackMessage from \"./SpotifyTrackMessage\";\nimport SpotifySearch from \"./SpotifySearch\";\nimport axios from 'axios';\nimport * as $ from \"jquery\";\n\n\n\n//CREDIT: https://github.com/gilbarbara/react-spotify-web-playback\n\nconst ChatRoom = (props) => {\n\n  const context = useContext(TokenContext);\n  const spotifyRegex = /(spotify:track:|https:\\/\\/[a-z]+\\.spotify\\.com\\/track\\/)([0-9a-z-A-Z]{22})/g;\n  const linkRegex = /(http:|https:|ftp:)\\/\\/[a-zA-Z0-9]+[.][a-z]+\\/*[^ \\n]*/g;\n  const { roomId } = props.match.params;\n  // const [curUserID, setCurUserID] = React.useState(\"\")\n  const [currUserID, setCurrUserID] = React.useState(\"\");\n  const { messages, sendMessage, setMessages } = useChat(roomId);\n  const [newMessage, setNewMessage] = React.useState(\"\");\n  const [currSong, setCurrSong] = React.useState([]);\n  const [showPlayer, setShowPlayer] = React.useState(false);\n  const [hitEnter, setEnter] = React.useState(false);         //this state tracks if the enter key was hit within the text field\n  const [check, setCheck] = React.useState(true);\n  const toggle = React.useCallback(() => setCheck(!check));\n  const [, updateState] = React.useState();\n  const forceUpdate = React.useCallback(() => updateState({}), []);\n\n  const id = async () => {\n    if(!context.currtoken)\n    {\n      return \"\";\n    }\n    await $.ajax({\n        url: \"https://api.spotify.com/v1/me\",\n        type: \"GET\",\n        beforeSend: xhr =>{\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + context.currtoken);\n            \n        },\n        success: data =>{\n            if(!data){\n                console.log(\"null values\");\n            }\n            setCurrUserID(data.id);\n            console.log(`right after set: ${currUserID}`);\n        },\n        error: error => {\n            console.log(\"IN GET DATA ERROR\", context.currtoken);\n            console.log(error);  \n        }\n    });\n  }\n  React.useEffect(() => {\n    id();\n\n  })\n\n  React.useEffect(() => {\n    retrieveDetailsFromServer(roomId); //get chat history\n  }, [currUserID]);\n\n  // React.useLayoutEffect(() => {\n  //   retrieveDetailsFromServer(\"xG7Y7IoU2\"); //get chat history\n  // }, [messages]);\n\n  const handleNewMessageChange = (event) => {\n    event.preventDefault()\n    if(hitEnter !== true){                 //if the enter key hasn't been pressed\n      setNewMessage(event.target.value);\n    }\n    setEnter(false);      //set the enter key to false\n  };\n\n  const handleSendMessage = () => {\n    if(newMessage === \"\"){\n          setNewMessage(\"\");\n      return;\n    };\n    sendMessage(newMessage);\n    sendDetailsToServer(newMessage, roomId);\n    // This will scroll to the bottom of the messages after a message is sent\n    // we want to timeout so that it occurs only after a song is rendered, otherwise\n    // it scrolls to the bottom, then renders the song, and now it's no longer at the bottom\n    var chats = document.getElementById(\"messages-container\");\n    // retrieveDetailsFromServer('xG7Y7IoU2');\n    setTimeout(() => {\n      chats.scrollTop = 1000000000;\n    },100);\n    setNewMessage(\"\");\n    \n  };\n\n  // add message to db\n  const sendDetailsToServer = (message, roomId) => {\n    const payload = {\n        session: roomId,\n        userID: currUserID,\n        content: message\n    }\n    axios.post(`${process.env.REACT_APP_HOST}/messages`, payload).catch(function (err) {\n        alert(err.message);\n    })\n  }\n\n  // pull message from db\n  const retrieveDetailsFromServer = (roomId) => {\n    console.log(\"here\");\n    if (currUserID) {\n      if (check){\n        axios.get(`${process.env.REACT_APP_HOST}/messages/${roomId}`, {\n          params: {\n            id: roomId\n          },\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n          },\n        }, { responseType: 'json' }).then((res) => {\n          // setMessages((messages) => []);\n          console.log(\"retrive from db here\");\n          for (let i = 0; i < res.data.length; i++) {\n            if(res.data[i].sender_id == currUserID)\n            {\n              // sendMessage(res.data[i].content, true);\n              const incomingMessage = {\n                body: res.data[i].content,\n                senderId: res.data[i].sender_id,\n                isCurrentUser: true,\n              };\n              setMessages((messages) => [...messages, incomingMessage]);\n            }\n            else{\n              const incomingMessage = {\n                body: res.data[i].content,\n                senderId: res.data[i].sender_id,\n                isCurrentUser: false,\n              };\n              setMessages((messages) => [...messages, incomingMessage]);\n              // sendMessage(res.data[i].content, false);\n            }\n          }\n        }).catch(function (err) {\n          console.log(err.type);\n        });\n        toggle();\n      }\n    }\n  }\n\n  const handleEnter = e => {    //handle enter function\n    if (e.keyCode === 13) {      //if the user hits enter\n      setEnter(true)            //set enter to true, the key has been hit\n      handleSendMessage()       //call the send message function (basically hit send button)\n    }\n  };\n\n\n  //Checking if message contains spotify track using JS regex.\n  const isMessageSpotifyTrack = (body) =>{\n    if(spotifyRegex.test(body)){\n      return true;\n    }\n      return false\n  }\n\n  //Checking if message contains a url using JS regex\n  const isMessageLink = (body) => {\n    if(linkRegex.test(body)){\n      return true\n    }\n    return false;\n  }\n\n  // const setSpotifyURIQueue = (message) => {\n  //   const array = message.match(spotifyRegex);\n  //   const songID = array[2];\n  //   const res = \"spotify:track:\".concat(songID);\n  //   const arr = currSong;\n  //   arr.push(res);\n  //   setCurrSong(arr);\n  // }\n\n  const setSpotifyURI = (message) => {\n  const array = message.match(/(spotify:track:|https:\\/\\/[a-z]+\\.spotify\\.com\\/track\\/)([0-9a-z-A-Z]{22})/);\n  const songID = array[2];\n  const res = \"spotify:track:\".concat(songID);\n  const arr = [res];\n  setCurrSong(arr);\n  }\n\n  return (\n  <div className=\"chat-room-page\">\n   <div className=\"chat-room-container\">\n    <h1 className=\"chat-room-title\">Chat Room</h1>\n      <h2 className=\"room-name\">Room: {roomId}</h2>\n      <div>\n        <SpotifySearch>SPOTIFY SEARCH</SpotifySearch>\n      </div>\n        <div className=\"messages-container\" id=\"messages-container\">\n          <ol className=\"messages-list\">\n          {\n            // console.log(`${messages}`),\n           console.log(messages.length),\n           messages.map((message, i) => {\n             if(isMessageSpotifyTrack(message.body)){\n              const spotifyLinkSet = new Set((message.body).match(spotifyRegex));\n              const spotifyLinks = Array.from(spotifyLinkSet);\n              const restofMessage = (message.body).replace(/[ \\n]*spotify:track:|https:\\/\\/[a-z]+\\.spotify\\.com\\/track\\/([0-9a-z-A-Z]{22})([?]si=[a-zA-Z0-9]{22})?([ \\n]*)/g,'');\n              const isRestOfMessageEmpty = restofMessage === '';\n              return (\n                  <div>\n                      {!isRestOfMessageEmpty ? <li key={i} className={`message-item ${ message.isCurrentUser ? \"my-message\" : \"received-message\" }`}>\n                            <div>\n                                {restofMessage}\n                            </div>\n                        </li> : null}\n                    {spotifyLinks.map((spotifyLink,m_key)=>{\n                        return(\n                          <li key={m_key} className={`message-item ${ message.isCurrentUser ? \"my-message\" : \"received-message\" }`}>\n                              <div  onClick={()=> {\n                                  setSpotifyURI(spotifyLink);\n                                  setShowPlayer(true);\n                                }}>\n                                  <SpotifyTrackMessage message={spotifyLink}  />\n                            </div>\n                          </li>\n                        )\n                      })\n                    }\n\n              </div>\n              )\n            }\n            else if(isMessageLink(message.body)){\n\n              const words = message.body.split(' ');\n              return(\n                <li key={i} className={`message-item ${ message.isCurrentUser ? \"my-message\" : \"received-message\" }`}>\n                {words.map((word,j)=>{\n                  const tempRegex = /(http:|https:|ftp:)\\/\\/[a-zA-Z0-9]+[.][a-z]+\\/*[^ \\n]*/g;\n                  const isLink = tempRegex.test(word);\n                    return(\n                      //TODO: THOMAS ADD CSS HERE PLZ TO CUT OUT NEW LINES BETWEEN THE TAGS\n                      <div key={j}>\n                        {isLink ? <a href={word} target=\"_blank\" rel=\"noreferrer\">{word} </a> : <div>{word}</div>}\n                      </div>\n                    )\n                })}\n                  </li>\n              )\n            }\n            else{\n              return (<li key={i} className={`message-item ${ message.isCurrentUser ? \"my-message\" : \"received-message\" }`}>\n                          {message.body}\n                     </li>)\n            }\n          })}\n        </ol>\n      </div>\n\n      <textarea\n        className=\"new-message-input-field\"\n        value={newMessage}\n        onKeyDown={handleEnter}\n        onChange={handleNewMessageChange}\n        placeholder=\"Write message...\"\n        id=\"new-message-input-field\"\n        onKeyPress={e => e.key === 'Enter' ? handleSendMessage() : null}\n\n\n      />\n      <button onClick={handleSendMessage} className=\"send-message-button\">\n        Send\n      </button>\n\n      {/* <div>\n        <SpotifySearch>SPOTIFY SEARCH</SpotifySearch>\n      </div> */}\n\n        <div>\n          {showPlayer ? <button onClick={() => setShowPlayer(false)}>\n            <img src=\"https://1001freedownloads.s3.amazonaws.com/vector/thumb/70571/close-button.png\" className=\"x-button\"/>\n          </button> : null}\n        </div>\n\n      <div>\n        {showPlayer ? <SpotifyPlayer\n          token={context.currtoken}\n          uris={currSong}\n          autoPlay=\"true\"\n          showSaveIcon=\"true\"\n          name=\"Auxswap\"\n          /> : null}\n      </div>\n      </div>\n    </div>\n\n  );\n};\n\nexport default ChatRoom;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport * as $ from \"jquery\";\nimport './ChatUserSearch.css';\nimport TokenContext from './TokenContext'\nimport { Link } from \"react-router-dom\";\nimport axios from 'axios';\nimport ChatRoom from \"./ChatRoom\";\n\nconst SpotifyUserSearch = (props) => {\n    const context = useContext(TokenContext);  \n    const [userID, setUserID] = useState('');\n    const [userDisplayName, setUserDisplayName] = useState('');\n    const [userImage, setUserImage] = useState('');\n    const [sessionID, setSessionID] = useState(''); \n    const [curUserID, setcurUserID] = useState('');\n\n    const id = async () => {\n      if(!context.currtoken)\n      {\n        return \"\";\n      }\n      await $.ajax({\n          url: \"https://api.spotify.com/v1/me\",\n          type: \"GET\",\n          beforeSend: xhr =>{\n              xhr.setRequestHeader(\"Authorization\", \"Bearer \" + context.currtoken);\n              \n          },\n          success: data =>{\n              if(!data){\n                  console.log(\"null values\");\n              }\n              setcurUserID(data.id);\n          },\n          error: error => {\n              console.log(\"IN GET DATA ERROR\", context.currtoken);\n              console.log(error);  \n          }\n      });\n    }\n    React.useEffect(() => {\n      id();\n    })\n\n    const getUserSearch = (props) => {\n\n      if(userID !== '')\n      {\n      $.ajax({\n      url: `https://api.spotify.com/v1/users/${userID}`,\n      type: \"GET\",\n      beforeSend: xhr => {\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + context.currtoken);\n      },\n      dataType: \"json\",\n      \n      success: data => {\n          if(!data){\n          }\n          else if(typeof(data) == undefined)\n          {\n\n          }\n          else\n          {\n            console.log(`userData: ${data}`);\n            setUserDisplayName(data.display_name);\n            if(data.images.length > 0)\n            {\n                setUserImage(data.images[0].url);\n            }\n            else\n            {\n                setUserDisplayName(\"User does not exist\");\n                setUserImage(\"\");\n            }\n          } \n      },\n      error: error => {\n        console.log(error);\n      }\n    });\n      }\n      else\n      {\n        setUserID(\"\");\n        setUserDisplayName(\"\");\n        setUserImage(\"\");\n              \n      }\n    }\n    useEffect((props) => {\n      getUserSearch();\n    },[userID]);\n    \n    // check the session between two person, if exists, then return session id, else create session\n    const getSession = async() => {\n      await axios.get(`${process.env.REACT_APP_HOST}/session/${userID}/${curUserID}`, {\n        params: {\n          user1: userID,\n          user2: curUserID\n        },\n        headers: {\n          'Accept': 'application/json',\n          'Content-Type': 'application/json',\n        },\n      }).then((res) => {\n        setSessionID(res.data[0].session_id);\n      }).catch(function (err) {\n        // create seesion\n        const payload = {\n          user1: curUserID,\n          user2: userID\n        }\n        axios.post(`${process.env.REACT_APP_HOST}/sessions`, payload).then((res) => {\n          setSessionID(res.data[1]);\n          console.log(res.data[1]);\n        }).catch(function (err) {\n            alert(err.message);\n        })\n      });\n     \n    }\n\n    return(\n        <div>\n        <br></br>\n            <input placeholder=\"Search for a user\" type=\"search\" id=\"user_searchbar\" autoComplete=\"off\" className=\"user-searchbarChatUserSearch\" onChange={() => {setUserID(document.getElementById('user_searchbar').value)}} />\n                  {userDisplayName!=='' && userImage!=='' ? <div className=\"result-containerChatUserSearch\">\n                        <ul className=\"result-listChatUserSearch\" id=\"result-listChatUserSearch\">\n                        <li className=\"user-info-itemChatUserSearch\">\n                        <div>\n\n                          {/* <button><img onClick={getSession}className=\"search-imageChatUserSearch\" src={userImage}/></button> */}\n                          <Link to={`/chat/${sessionID}`}>\n                            <img onClick={getSession}className=\"search-imageChatUserSearch\" src={userImage}/>\n                          </Link>\n                         \n                        <div className=\"user-display-nameChatUserSearch\">{userDisplayName}</div>\n                      </div>\n                      </li>\n          </ul>\n        </div>\n : null}\n\n{userDisplayName!=='' && userImage=='' ? <div className=\"result-containerChatUserSearch\">\n                        <ul className=\"result-listChatUserSearch\" id=\"result-listChatUserSearch\">\n                        <li className=\"user-info-itemChatUserSearch\">\n                        <div>\n\n                        <div className=\"user-display-nameChatUserSearch_2\">{userDisplayName}</div>\n                      </div>\n                      </li>\n          </ul>\n        </div>\n : null}\n\n      </div>\n    )\n    \n  }\n    \n  export default SpotifyUserSearch","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport NavBar from '../components/navBar';\nimport \"./ChatHome.css\";\nimport ChatUserSearch from '../components/ChatUserSearch'\n\n\nconst ChatHome = () => {\n  const [roomName, setRoomName] = React.useState(\"\");\n  const history = useHistory();\n\n  const handleRoomNameChange = (event) => {\n    setRoomName(event.target.value);\n  };\n\nconst handleClick = () => {\n  history.push(`/chat/${roomName}`);\n}\n\nconst handleEnter = e => {    //handle enter function\n  if (e.keyCode === 13) {      //if the user hits enter\n    handleClick()       //call the send message function (basically hit send button)\n  }\n};\n\n  return (\n    <div>\n      <div className=\"home-container\">\n      <input\n        type=\"text\"\n        placeholder=\"Room\"\n        value={roomName}\n        onKeyDown={handleEnter}\n        onChange={handleRoomNameChange}\n        className=\"text-input-field\"\n      />\n      \n      <Link to={`/chat/${roomName}`} className=\"enter-room-button\">\n        Join room\n      </Link>\n      <ChatUserSearch></ChatUserSearch>\n      \n      </div>\n\n    </div>\n  );\n};\n\nexport default ChatHome;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport ChatHome from \"./ChatHome.js\";\nimport Party from '../pages/Party';\nimport ChatRoom from \"../components/ChatRoom\";\nimport PlayerPage from '../pages/PlayerPage';\nimport Home from '../components/Home';\n\nfunction Chat() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/chat\" component={ChatHome} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/chat/:roomId\" component={ChatRoom} />\n        <Route exact path=\"/player\" component={PlayerPage}/>\n        <Route exact path=\"/party\" component={Party}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Chat;","import {useEffect,useState} from 'react'\nimport \"./activeBox.css\"\nexport default function ActiveBox(members) {\n    const [usersInRoom,setUsers]=useState()\n    useEffect(()=>{\n        //console.log(members)\n        setUsers(members.members)\n    },[members])\n    return (\n        <div className=\"userContainer\">\n            {usersInRoom? usersInRoom.map(({name,data,id})=>(\n                     <div className = \"userBlock\"key={id}>\n                         <img src={data} className=\"userIcon\"></img>\n                         <div className=\"userName\">{name}</div>\n                     </div>\n                 )):null}\n        </div>\n    )\n}\n","import React from 'react'\nimport \"./SongTab.css\"\n\nexport default function SongTab({song,setsong}) {\n    function handleClick(){\n        if(!song)return\n        setsong(song)\n    }\n    return (\n        // <div className=\"song-tab\"onClick={handleClick}>\n        //    <img src={song.image}/>\n        //    <div className=\"song-name-party\">{song.songName}</div>\n        //    <div className=\"artist-name-party\">{song.artist}</div>\n        // </div>\n\n        <div className=\"song_re\">\n          <ul className=\"result-list-party\">\n\n                 <li className=\"song-info-list-item-party\" onClick={handleClick}>\n                      <div>\n                        <img className=\"search-images\" src={song.image} />\n                        <div className=\"song-name\">{song.songName}</div>\n                        <div className=\"song-artist\">{song.artist}</div>\n                      </div>\n                </li>\n\n\n          </ul>\n        </div>\n    )\n}\n","import { useState, useEffect } from 'react'\nimport { FormControl } from 'react-bootstrap';\nimport \"./SearchBar.css\";\nimport SongTab from \"./SongTab\"\nexport default function SearchBar({api,handleSongSend}) {\n\n    const [currentApi, setApi] = useState()\n    const [useForSearch, setUseSearch] = useState(\"\")\n    const [result, setresult] = useState([])\n    \n\n    //console.log(result)\n\n    function setsong(song){\n        \n        handleSongSend(song)\n        //console.log(song)\n        setUseSearch(\"\")\n    }\n    useEffect(() => {\n        if (!api) return\n        setApi(api)\n    }, [api])\n    useEffect(() => {\n        if (!currentApi) return\n        if (!useForSearch) return setresult([])\n       \n        currentApi.searchTracks(useForSearch).then((data) => {\n            setresult(\n                data.body.tracks.items.map(track => {\n                    return {\n                        songName: track.name,\n                        artist: track.artists[0].name,\n                        image: track.album.images[2].url,\n                        songUrl: track.uri\n                    }\n\n                })\n            )\n        })\n    }, [useForSearch, currentApi])\n    return (\n        <div className=\"search-box\">\n            <FormControl\n                type=\"search\"\n                placeholder=\"Enter song name\"\n                value={useForSearch}\n                onChange={event => setUseSearch(event.target.value)}\n                className=\"search-bar\"\n            />\n            <div className=\"song-box\">\n                {\n                    result.map(song=>(\n                        <SongTab song={song} key={song.songUrl} setsong={setsong}/>\n                    ))\n                }\n                \n            </div>\n            <div className=\"decision-box\">\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './SongQueue.css'\n\nexport default function SongQueue({song}) {\n  \n    return (\n        <div>\n            <div>\n           <img src={song.image}/>\n           <div className=\"song-name\">{song.songName}</div>\n           <div className=\"artist-name\">{song.artist}</div>\n            </div>\n        </div>\n    )\n}\n","import { useContext, useEffect, useRef, useState } from \"react\";\nimport socketIOClient from \"socket.io-client\";\nimport TokenContext from '../components/TokenContext';\nimport * as $ from \"jquery\";\nconst SOCKET_SERVER_URL = process.env.REACT_APP_HOST;\nconst Join_event = \"newJoin\";\nconst Get_room_data = \"get_room_data\";\nconst SS_event=\"song_send\"\nconst Get_topList=\"get_top_list\"\nconst next_song = \"get_next\"\nconst useParty = (props) => {\n    const [Username, setname] = useState('')\n    const [roomNum, setroomNum] = useState()\n    const [Userimage, setimage] = useState('')\n    const context = useContext(TokenContext)\n    const [memberlist, setMemberlist] = useState()\n    const [songList,setsonglist] = useState()\n    const [currentSong,setcurrentSong]=useState()\n    const socketRef = useRef();\n    \n    \n    function SDKPlay(songUrl){\n        $.ajax({\n            url: \"https://api.spotify.com/v1/me/player/play?device_id=\" + window.onSpotifyWebPlaybackSDKReady().SDK_ID,\n            type: \"PUT\",\n            data: '{\"uris\": [\"'+songUrl+'\"]}',\n            beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + context.currtoken );},\n           });\n    }\n    useEffect(() => {\n        //console.log(\"called first ?\")\n        window.onbeforeunload = function () { return false; }\n        setroomNum(props.room)\n        \n        props.setAPi(props.spotify.setAccessToken(context.currtoken))\n        \n        props.spotify.getMe().then((data) => {\n            setimage(data.body.images[0].url)\n            setname(data.body.display_name)\n        }, (error) => {\n            console.log(error)\n        })\n    }, [props.room, context.currtoken])\n    \n    useEffect(() => {\n       \n        if (Username != '' && Userimage != '') {\n            \n            socketRef.current = socketIOClient(SOCKET_SERVER_URL, { query:roomNum });\n            \n            socketRef.current.emit(Join_event, { name: Username , data: Userimage ,room:roomNum })\n            \n            socketRef.current.on(Get_room_data,({ users })=>{\n                setMemberlist(users);\n            });\n            socketRef.current.on(SS_event,({songs})=>{\n                setsonglist(songs);  \n            });\n            socketRef.current.on(Get_topList,({song})=>{\n                setcurrentSong(song)\n            });\n            peakTop()\n            return () => {\n                socketRef.current.disconnect();\n                window.onSpotifyWebPlaybackSDKReady().SDK_object.disconnect()\n            }\n        }\n    }, [Username, Userimage,roomNum]);\n    const sendSong=(song)=>{\n        socketRef.current.emit(SS_event,{song})\n       \n    }\n    const nextSong=()=>{\n        console.log(\"next....\")\n        socketRef.current.emit(next_song)\n        socketRef.current.on(SS_event,({songs})=>{\n                setsonglist(songs);  \n            });\n      \n    }\n    const peakTop = ()=>{\n        socketRef.current.emit(Get_topList)\n        socketRef.current.on(Get_topList,({song})=>{\n            setcurrentSong(song)\n        });\n    }\n    return {memberlist,songList,sendSong,currentSong,peakTop,nextSong,SDKPlay}\n};\n\nexport default useParty;","import React from \"react\";\nimport NavBar from './navBar';\nimport { useState,useEffect,useLayoutEffect} from \"react\";\nimport ActiveBox from \"./Party_components/activeBox\"\nimport SearchBar from \"./Party_components/SearchBar\"\nimport SongQueue from \"./Party_components/SongQueue\"\nimport CurrentPlay from\"./Party_components/CurrentPlay\"\nimport useParty from \"../hooks/useParty\";\n\nimport \"./PartyRoom.css\"\n\nimport SpotifyWebApi from \"spotify-web-api-node\";\nconst sp = new SpotifyWebApi()\n\nfunction PartyRoom(props){\n    \n    \n    const {roomId} = props.match.params;\n    const [spotifyApi,setAPi]=useState(sp)\n    const [member,setmember] = useState()\n    const [localsongList,setSonglist] = useState([])\n    const [localSDK,setSDK]=useState()\n    const  party= useParty({room:roomId,spotify:spotifyApi,setAPi});\n    //console.log(localsongList)\n    function handleSongSend(song){\n        party.sendSong(song)\n    }\n    function handleVolume(event){\n        if(!window.onSpotifyWebPlaybackSDKReady().SDK_object) return\n        if(!localSDK) return\n        localSDK.setVolume(event.target.value/100)\n        //console.log(event.target.value)\n    }\n    useLayoutEffect(()=>{\n        if(!window.onSpotifyWebPlaybackSDKReady().SDK_object) return\n        setSDK(window.onSpotifyWebPlaybackSDKReady().SDK_object)\n    })\n   \n    useEffect(()=>{\n        if(!party.songList) return\n        setSonglist(party.songList)\n        party.peakTop()\n    },[party.songList])\n    \n    useEffect(()=>{\n        setmember(party.memberlist)\n    },[party.memberlist])\n    useEffect(()=>{\n        if(!party.currentSong) return\n        if(!localSDK) return\n        localSDK.getCurrentState().then(state=>{\n            if(!state){\n                party.SDKPlay(party.currentSong.songUrl)\n                return\n            }\n            if(state.track_window.current_track.uri!=party.currentSong.songUrl)\n            {\n                party.SDKPlay(party.currentSong.songUrl)\n                return\n            }\n        })\n    },[party.currentSong])\n    useEffect(()=>{\n        if(!localSDK) return\n        const interv=setInterval(()=>{\n            localSDK.getCurrentState().then(state=>{\n                if(!state) return\n                console.log(state)\n                if(state.paused==true)\n                {\n                    if(localsongList.length>0)\n                    {\n                        party.nextSong()\n                    }\n                    \n                }\n            })\n        },1000)\n        return ()=>{\n            clearInterval(interv)\n        }\n    })\n   \n    return(\n        <div>\n            <div className=\"party-room-container\">\n                <h1 className=\"party-room-title\">Party room</h1>\n                <h2 className=\"party-room-name\" >Room: {roomId}</h2>\n                <div className=\"user-container\">\n                    <h3 className=\"user-title\">Active Users</h3>\n                <ActiveBox members={member}/>\n                <div className=\"volume_control\">\n                <input type=\"range\" min=\"1\" max=\"100\" className=\"slider\" onChange={handleVolume}></input>\n                </div>\n                </div>\n                <div className=\"Search-Bar\">\n                <SearchBar api={spotifyApi} handleSongSend={handleSongSend}/>\n                </div>\n                <div className=\"song-container\">\n                    {localsongList.map((song)=>\n                        \n                        (<SongQueue song={song} key={song.songUrl}/>)\n                    )}\n                \n                </div>\n            </div>\n        </div>\n\n    )\n}\n\nexport default PartyRoom;","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport PartyHome from \"./PartyHome.js\";\nimport Chat from '../pages/Chat';\nimport PartyRoom from \"../components/PartyRoom\";\nimport PlayerPage from '../pages/PlayerPage';\n\nfunction Party() {\n\n  return (\n\n    <Router>\n      <Switch>\n        <Route exact path=\"/party\" component={PartyHome} />\n        <Route exact path=\"/party/:roomId\" component={PartyRoom} />\n        <Route exact path=\"/player\" component={PlayerPage}/>\n        <Route exact path=\"/chat\" component={Chat}/>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default Party;\n","import React, {useContext, useEffect, useState} from 'react';\nimport TokenContext from \"./TokenContext\";\nimport Party from '../pages/Party';\nimport Chat from '../pages/Chat';\nimport {\n  BrowserRouter as Router,\n  NavLink,\n  Route\n} from \"react-router-dom\";\nimport './Home.css';\nimport logo from '../images/logo_1_transparent.png'\nimport './navBar.css';\n\nfunction NavBar(props){\n    const [displayname, setDisplayName] = React.useState(\"\");\n    const [imageurl,setImageUrl] = React.useState(\"\");\n\n    useEffect(() => {\n        setDisplayName(props.displayname);\n        setImageUrl(props.imageurl);\n  }, [props.imageurl,props.displayname]);\n\n    return(\n    <nav className=\"navClass\">\n    <div>\n    </div>\n            <ul className=\"navList\">\n                <li className =\"navListElementsLogo\">\n                    <NavLink to=\"/home\">\n                        <img src={logo} className=\"navLogo\" />\n                    </NavLink>\n                </li>\n                <li className =\"navListElements\">\n                    <NavLink to=\"/chat\"> Chat </NavLink>\n                </li>\n                <li className =\"navListElements\">\n                    <NavLink to=\"/party\"> Party </NavLink>\n                </li>\n                <div className=\"userNav\">\n                    <li><img className=\"navImage\" src={imageurl}/></li>\n                    <li className=\"displayName\"> {displayname} </li>\n                   \n                </div>\n            </ul>\n    </nav>\n    );\n\n}\n\nexport default NavBar","import React, { useContext, useEffect } from \"react\";\nimport * as $ from \"jquery\";\nimport Player from \"../components/Player\";\nimport './PlayerPage.css';\nimport logo from '../logo.svg';\nimport TokenContext from \"../components/TokenContext\";\nimport NavBar from '../components/navBar';\n\nfunction PlayerPage() {\n\nconst context = useContext(TokenContext);\n\nconst[item, setItem] = React.useState({album: {images: [{url: \"\"}]}, name: \"\", artists: [{name: \"\"}], duration_ms: 0});\nconst[is_playing, setIs_playing] = React.useState(\"Paused\");\nconst[progress_ms, setProgress_ms] = React.useState(0);\nconst[NoData, setNoData] = React.useState(false);\nconst[didErrorOccur, setDidErrorOccur] = React.useState(false);\n\n\n//This uses fetch... \n// const getDatav2 = async (token) => {\n//   const settings = {\n// headers: {'Authorization': 'Bearer ' + token}\n// }\n//   const response = await fetch('https://api.spotify.com/v1/me/player',settings);\n//   const data = await response.json();\n//         if(!data){\n//         setNoData(true);\n//         return;\n//       }\n//       console.log(data);\n//       setItem(data.item);\n//       setIs_playing(data.is_playing);\n//       setProgress_ms(data.progress_ms);\n//       setNoData(false);\n// }\n\n//Original API call function... this uses ajax(a jQuery function) to preform it...\nfunction getData() {\n  $.ajax({\n    url: \"https://api.spotify.com/v1/me/player\",\n    type: \"GET\",\n    beforeSend: xhr => {\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + context.currtoken);\n    },\n    success: data => {\n      if(!data){\n        setNoData(true);\n        return;\n      }\n      setItem(data.item);\n      setIs_playing(data.is_playing);\n      setProgress_ms(data.progress_ms);\n      setNoData(false);\n    },\n    error: error => {\n      console.log(error);\n      setNoData(true);\n      setDidErrorOccur(true);\n\n    }\n  });\n}\n\n\n\n//TODO: DO NOT DELETE THE COMMENTED CODE DOWN BELOW. WE SHOULD PROBABLY CHOOSE THE BEST WAY TO USE THE \"useEffect\" CALLS. SO SHOULD WE \n// USE STATE VARIABLES OR THE VARIABLES WE DELCARE IN THE \"useEffect\" FUNCTIONS....\n\n\n// A useEffect is triggered after a component FIRST renders. The useEffect will be called, and then the component will be updated accordingly.\n// See here: https://reactjs.org/docs/hooks-effect.html#:~:text=What%20does%20useEffect%20do%3F,after%20performing%20the%20DOM%20updates.\n//A useEffect within a component will only be called again if a value in its dependency list ( the '[]' at the end of the line) is modifed.\n\n//For example, the first useEffect here has no dependencies, so it will only be called once to retrieve the value of the token in the hash\n//if it exists.\n\n  // useEffect(() => {\n  // const localToken = window.sessionStorage.getItem('token');\n  //   if(localToken) {\n  //   setCurrToken(localToken);\n  // }\n  // else {\n  // let token = hash.access_token\n  // if(token) {\n  //     setCurrToken(token);\n  //     window.sessionStorage.setItem('token',token);\n  // }\n  //  }\n  // }, []);\n\n  \n  //This useEffect will trigger after the component first renders, and then it will trigger whenever 'currtoken' is modified, because 'currtoken' is in its dependencies list.\n  //   useEffect(() => {\n  //     async function fetchData() {\n  //       if(currtoken != null){\n  //         getDatav2(currtoken);\n  //       }\n  //     }\n  //     fetchData();\n  // }, [currtoken]);\n\n  useEffect(() => {\n      getData();\n}, [context.currtoken]);\n\n\n    return (\n      <div className=\"App\">\n        <NavBar/>\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          {!NoData && (\n            <Player\n              item={item}\n              is_playing={is_playing}\n              progress_ms={progress_ms}\n            />\n          )}\n          {NoData && didErrorOccur && (\n            <p>\n                Uh oh! An error occurred when making contact with the API :(\n            </p>\n          )}\n          {NoData && !didErrorOccur && (\n            <p>\n              Are you logged into Spotify? Make sure you are logged in AND that something is playing.\n            </p>\n          )}\n        </header>\n      </div>\n    );\n\n\n}\n\nexport default PlayerPage","import React from 'react';\nimport PlayerPage from '../pages/PlayerPage';\nimport Party from '../pages/Party';\nimport Chat from '../pages/Chat';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  NavLink,\n} from \"react-router-dom\";\nimport './Home.css';\nimport logo from '../images/logo_1_transparent.png'\nimport NavBar from './navBar';\n\n\nfunction Home(){\n\nreturn(\n    <div>\n            {/* <header className=\"App-header\">\n            </header> */}\n            <header className=\"head1\">Welcome to AuxSwap!</header>\n            <img src={logo} className=\"logoHome\" />\n            <div class=\"row\">\n                <NavLink to=\"/chat\">\n                <div class=\"column\">\n                    <h2 className=\"head2\">Chat</h2>\n                    <ul>\n                    <li className=\"bullets\">Chat with friends</li>\n                        <li className=\"bullets\">Search and share songs</li> \n                        <li className=\"bullets\">Play songs directly in the chat</li> \n                    </ul>\n                </div>\n                </NavLink>\n                <NavLink to=\"/party\">\n                <div class=\"column2\">\n                    <h2 className=\"head2\">Party Lobbies</h2>\n                    <ul>\n                    <li className=\"bullets\">Join lobbies to listen together</li>\n                        <li className=\"bullets\">Add songs to the queue</li>\n                        <li className=\"bullets\">Hear new music and share with your friends</li>\n                       \n                    </ul>\n                </div>\n                </NavLink>\n            </div>\n\n            {/* <ul>\n                <li>\n                    <NavLink to=\"/chat\"> Chat </NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/party\"> Party </NavLink>\n                </li>\n                <li>\n                    <NavLink to=\"/player\"> Player</NavLink>\n                </li>\n            </ul> */}\n\n    \n{/*  Why doesn't this work?\n            <Switch>\n                <Route exact path=\"/chat\">\n                    <Chat/>\n                </Route>\n                <Route exact path=\"/party\">\n                    <Party/>\n                </Route>\n                <Route exact path=\"/player\">\n                    <PlayerPage/>\n                </Route>\n            </Switch> */}\n    </div>\n);\n}\n export default Home\n","import React, { useEffect } from 'react';\n\n\nfunction Callback(props) {\n\nuseEffect(() => {\n    const hash = window.location.hash.substring(1).split(\"&\").reduce(function(initial,item) {\n        if(item) {\n            let parts = item.split(\"=\");\n            initial[parts[0]] = decodeURIComponent(parts[1]);\n            console.log(decodeURIComponent(parts[1]));\n        }\n        return initial;\n    }, {});\n    let token = hash.access_token;\n    let refresh = hash.refresh_token;\n    if (token && refresh) {\n      props.updateToken(token,refresh);\n    }\n    else if(token){\n      props.JustToken(token);\n    }\n  }, [props]);\n\n  return null;\n};\n\nexport default Callback;","import React, { useEffect } from \"react\";\nimport './App.css';\nimport * as $ from \"jquery\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect\n} from \"react-router-dom\";\nimport TokenContext from \"./components/TokenContext\";\nimport RefreshTokenContext from \"./components/RefreshTokenContext\";\nimport Login from './components/Login';\nimport Home from './components/Home';\nimport Callback from './components/Callback';\nimport Party from './pages/Party';\nimport Chat from './pages/Chat';\nimport NavBar from \"./components/navBar\";\n\n\n\nfunction App() {\n  const[currtoken, setCurrToken] = React.useState(null);\n  const[refreshcurrtoken, setRefreshCurrToken] = React.useState(null);\n  const [displayname, setDisplayName] = React.useState(\"\");\n  const [imageurl,setImageUrl] = React.useState(\"\");\n\n    useEffect(() => {\n\n      const fetchData = async (token) => {\n       await $.ajax({\n          url: \"https://api.spotify.com/v1/me\",\n          type: \"GET\",\n          beforeSend: xhr =>{\n              xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\n              \n          },\n          success: data =>{\n              if(!data){\n                  console.log(\"null values\");\n              }\n              setDisplayName(data.display_name);\n              setImageUrl(data.images[0].url);\n          },\n          error: error => {\n              console.log(\"IN GET DATA ERROR\",token);\n              console.log(error);\n              \n          }\n      });\n      };\n    const token = window.sessionStorage.getItem('token');\n    const refresh = window.sessionStorage.getItem('refresh');\n    if (token) {\n      setCurrToken(token);\n      fetchData(token);\n      if(refresh){\n        setRefreshCurrToken(refresh);\n      };\n    };\n  }, []);\n\n\n  const updateToken = (token,refresh) => {\n    window.sessionStorage.setItem('token', token);\n    window.sessionStorage.setItem('refresh', refresh);\n    setCurrToken(token);\n    setRefreshCurrToken(refresh);\n  };\n\n\n  const JustToken = (token) => {\n    window.sessionStorage.setItem('token', token);\n    setCurrToken(token);\n  };\n\n  //TODO: Move the last four routes into home.js without it breaking.... Why do they all need to be in one place?\n    return (\n    <TokenContext.Provider value={{currtoken}}>\n      <RefreshTokenContext.Provider value={{refreshcurrtoken}}>\n      <Router>\n          <Switch>\n            <Route exact path=\"/\">\n              {currtoken ? <Redirect to=\"/home\"/> : <Login/>}\n            </Route>\n            <Route exact path=\"/home\">\n              {currtoken ? <div> <NavBar displayname={displayname} imageurl = {imageurl} /><Home/> </div>: <Redirect to=\"/\"/> }\n            </Route>\n            <Route path=\"/callbackpage\">\n              {currtoken ? <Redirect to=\"/home\"/> : <Callback updateToken={updateToken} JustToken={JustToken}/> }\n            </Route>\n            <Route exact path=\"/chat\">\n            <NavBar displayname={displayname} imageurl = {imageurl} /> <Chat/>\n            </Route>\n            <Route exact path=\"/party\">\n            <NavBar displayname={displayname} imageurl = {imageurl} /> <Party/>\n            </Route>\n          </Switch>\n        </Router>\n        </RefreshTokenContext.Provider>\n    </TokenContext.Provider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}