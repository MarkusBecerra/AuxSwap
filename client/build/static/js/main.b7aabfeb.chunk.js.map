{"version":3,"sources":["components/TokenContext.js","components/RefreshTokenContext.js","images/logo_1_transparent.png","components/Login.js","components/Player.js","logo.svg","components/Party_components/Player.js","pages/PartyHome.js","hooks/useChat.js","components/SpotifyTrackMessage.js","components/SpotifySearch.js","components/ChatRoom.js","components/ChatUserSearch.js","pages/ChatHome.js","pages/Chat.js","components/Party_components/activeBox.js","components/Party_components/SongTab.js","components/Party_components/SearchBar.js","components/Party_components/SongQueue.js","hooks/useParty.js","components/PartyRoom.js","pages/Party.js","components/navBar.js","pages/PlayerPage.js","components/Home.js","components/Callback.js","App.js","reportWebVitals.js","index.js"],"names":["TokenContext","React","createContext","Login","className","src","logo","href","process","Player","props","backgroundStyles","backgroundImage","item","album","images","url","progressBarStyles","width","progress_ms","duration_ms","name","artists","is_playing","style","context","useContext","useState","SDK","setSDK","DeviceID","setDevice","useEffect","window","onSpotifyWebPlaybackSDKReady","SDK_object","SDK_ID","onLoad","player","Spotify","getOAuthToken","cb","currtoken","addListener","message","console","error","device_id","log","connect","PartyHome","roomName","setRoomName","history","useHistory","type","placeholder","value","onKeyDown","e","keyCode","push","onChange","event","target","to","NEW_CHAT_MESSAGE_EVENT","useChat","roomId","messages","setMessages","socketRef","useRef","current","socketIOClient","query","on","incomingMessage","isCurrentUser","senderId","id","disconnect","sendMessage","messageBody","emit","body","SpotifyTrackMessage","regex","image","setImage","songName","setSongName","artistName","setArtistName","songID","match","$","beforeSend","xhr","setRequestHeader","success","data","getSongImage","SpotifySearch","topResults","setTopResults","trackName","setTrackName","appendSongToMessage","song","textarea","document","getElementById","element","valueSetter","Object","getOwnPropertyDescriptor","set","prototype","getPrototypeOf","prototypeValueSetter","call","setNativeValue","dispatchEvent","Event","bubbles","length","dataType","tracks","items","forEach","autoComplete","slice","map","index","onClick","external_urls","spotify","ChatRoom","spotifyRegex","linkRegex","params","currUserID","setCurrUserID","newMessage","setNewMessage","currSong","setCurrSong","showPlayer","setShowPlayer","hitEnter","setEnter","check","setCheck","toggle","useCallback","updateState","a","retrieveDetailsFromServer","handleSendMessage","sendDetailsToServer","chats","setTimeout","scrollTop","payload","session","userID","content","axios","post","catch","err","alert","get","headers","responseType","then","res","i","sender_id","test","spotifyLinkSet","Set","spotifyLinks","Array","from","restofMessage","replace","isRestOfMessageEmpty","spotifyLink","m_key","concat","setSpotifyURI","isMessageLink","words","split","word","j","isLink","rel","preventDefault","onKeyPress","key","token","uris","autoPlay","showSaveIcon","SpotifyUserSearch","setUserID","userDisplayName","setUserDisplayName","userImage","setUserImage","sessionID","setSessionID","curUserID","setcurUserID","undefined","display_name","getSession","user1","user2","session_id","toLowerCase","ChatHome","Chat","exact","path","component","Home","PlayerPage","Party","ActiveBox","members","usersInRoom","setUsers","SongTab","setsong","artist","SearchBar","api","handleSongSend","currentApi","setApi","useForSearch","setUseSearch","result","setresult","searchTracks","track","songUrl","uri","FormControl","SongQueue","SS_event","Get_topList","useParty","Username","setname","roomNum","setroomNum","Userimage","setimage","memberlist","setMemberlist","songList","setsonglist","currentSong","setcurrentSong","onbeforeunload","room","setAPi","setAccessToken","getMe","users","songs","peakTop","sendSong","nextSong","SDKPlay","sp","SpotifyWebApi","PartyRoom","spotifyApi","member","setmember","localsongList","setSonglist","localSDK","party","useLayoutEffect","getCurrentState","state","track_window","current_track","interv","setInterval","paused","clearInterval","min","max","volume","setVolume","parseFloat","NavBar","displayname","setDisplayName","imageurl","setImageUrl","setItem","setIs_playing","setProgress_ms","NoData","setNoData","didErrorOccur","setDidErrorOccur","alt","class","Callback","hash","location","substring","reduce","initial","parts","decodeURIComponent","access_token","refresh","refresh_token","updateToken","JustToken","App","setCurrToken","refreshcurrtoken","setRefreshCurrToken","fetchData","sessionStorage","getItem","Provider","RefreshTokenContext","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render"],"mappings":"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","file":"static/js/main.b7aabfeb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst TokenContext = React.createContext();\r\n\r\nexport default TokenContext;","import React from 'react';\r\n\r\nconst TokenContext = React.createContext();\r\n\r\nexport default TokenContext;","export default __webpack_public_path__ + \"static/media/logo_1_transparent.f6b8161d.png\";","import React from \"react\";\r\nimport './Login.css';\r\nimport logo from '../images/logo_1_transparent.png'\r\n\r\n\r\n\r\n// export const authEndpoint = 'https://accounts.spotify.com/authorize';\r\n\r\n// const clientId = \"07edde060f0f46bf82f2a7f621354d2a\"\r\n// const redirectUri = \"http://localhost:3000/callback\"\r\n// const scopes = [\r\n//   \"user-read-private\",\r\n//   \"user-read-currently-playing\",\r\n//   \"user-read-email\",\r\n//   \"user-library-read\",\r\n//   \"streaming\",\r\n//   \"user-read-recently-played\",\r\n//   \"user-top-read\",\r\n//   \"user-modify-playback-state\",\r\n//   \"user-read-playback-state\",\r\n//   \"user-library-modify\",\r\n// ]\r\n\r\n\r\n  // href={`${authEndpoint}?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scopes.join(\r\n //   \"%20\"\r\n // )}&response_type=token&show_dialog=true`}\r\n\r\nfunction Login() {\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <h1 className=\"head\">AuxSwap</h1>\r\n        <img src={logo} className=\"mainLogo\" />\r\n          <body className=\"bod\">\r\n            A web application using Spotify. <br></br>\r\n            Listen together and chat with your friends!\r\n          \r\n          </body>\r\n          {/* <header className=\"App-header\"> */}\r\n              <a className=\"Login-button\" href={`${process.env.REACT_APP_HOST}/auth/login`} >\r\n                Login to Spotify\r\n              </a>\r\n          {/* </header> */}\r\n      </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Login","//credit: https://levelup.gitconnected.com/how-to-build-a-spotify-player-with-react-in-15-minutes-7e01991bc4b6\r\n//THIS IS ONLY A PLACEHOLDER FOR NOW. THIS COMPONENT WILL NOT MAKE INTO THE FINAL VERSION OF AUXSWAP\r\n\r\n\r\nimport React from \"react\";\r\nimport \"./Player.css\";\r\nconst Player = props => {\r\n  const backgroundStyles = {\r\n    backgroundImage:`url(${props.item.album.images[0].url})`,\r\n  };\r\n  \r\n  const progressBarStyles = {\r\n    width: (props.progress_ms * 100 / props.item.duration_ms) + '%'\r\n  };\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"main-wrapper\">\r\n        <div className=\"now-playing__img\">\r\n          <img src={props.item.album.images[0].url} />\r\n        </div>\r\n        <div className=\"now-playing__side\">\r\n          <div className=\"now-playing__name\">{props.item.name}</div>\r\n          <div className=\"now-playing__artist\">\r\n            {props.item.artists[0].name}\r\n          </div>\r\n          <div className=\"now-playing__status\">\r\n            {props.is_playing ? \"Playing\" : \"Paused\"}\r\n          </div>\r\n          <div className=\"progress\">\r\n            <div\r\n              className=\"progress__bar\"\r\n              style={progressBarStyles}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"background\" style={backgroundStyles} />{\" \"}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Player;","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import {useEffect,useContext,useState} from 'react'\r\nimport Script from 'react-load-script'\r\nimport TokenContext from '../TokenContext';\r\n\r\nexport default function Player() {\r\n    \r\n    const context = useContext(TokenContext)\r\n    const [SDK,setSDK]=useState()\r\n    const [DeviceID,setDevice]=useState()\r\n\r\n    useEffect(()=>{\r\n        window.onSpotifyWebPlaybackSDKReady=()=>{\r\n            return {SDK_object:SDK,SDK_ID:DeviceID}\r\n         }\r\n    })\r\n    function handleLoad(){\r\n        \r\n        const player = new window.Spotify.Player({\r\n            name:'AuxSwap',\r\n            getOAuthToken: cb=>{cb(context.currtoken);}\r\n        });\r\n        //console.log(player)\r\n        player.addListener('initialization_error', ({ message }) => { console.error(message); });\r\n        player.addListener('authentication_error', ({ message }) => { console.error(message); });\r\n        player.addListener('account_error', ({ message }) => { console.error(message); });\r\n        player.addListener('playback_error', ({ message }) => { console.error(message); });\r\n\r\n        // Playback status updates\r\n        //player.addListener('player_state_changed', state => { console.log(state);  });\r\n\r\n    // Ready\r\n        player.addListener('ready', ({ device_id }) => {\r\n        console.log('Ready with Device ID', device_id);\r\n        setDevice(device_id)\r\n        });\r\n        // Not Ready\r\n        player.addListener('not_ready', ({ device_id }) => {\r\n        console.log('Device ID has gone offline', device_id);\r\n        });\r\n        player.connect()\r\n        setSDK(player)\r\n    }\r\n    return (\r\n        <div>\r\n            <Script \r\n                url=\"https://sdk.scdn.co/spotify-player.js\" \r\n                onLoad={handleLoad}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./PartyHome.css\";\r\nimport Player from '../components/Party_components/Player'\r\nconst PartyHome = () => {\r\n  const [roomName, setRoomName] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleRoomNameChange = (event) => {\r\n    setRoomName(event.target.value);\r\n  };\r\n\r\nconst handleClick = () => {\r\n  history.push(`/party/${roomName}`);\r\n}\r\n\r\nconst handleEnter = e => {    //handle enter function\r\n  if (e.keyCode == 13) {      //if the user hits enter\r\n    handleClick()       //call the send message function (basically hit send button)\r\n  }\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <Player />\r\n      <div className=\"home-container\">\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Room\"\r\n        value={roomName}\r\n        onKeyDown={handleEnter}\r\n        onChange={handleRoomNameChange}\r\n        className=\"text-input-field\"\r\n      />\r\n      <Link to={`/party/${roomName}`} className=\"enter-room-button\">\r\n        Join Party\r\n      </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PartyHome;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\n\r\nconst NEW_CHAT_MESSAGE_EVENT = \"newChatMessage\";\r\nconst SOCKET_SERVER_URL = process.env.REACT_APP_HOST;\r\n\r\nconst useChat = (roomId) => {\r\n  const [messages, setMessages] = useState([]);\r\n  const socketRef = useRef();\r\n  \r\n  const deleteMessages = () => {\r\n    setMessages([]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    socketRef.current = socketIOClient(SOCKET_SERVER_URL, {\r\n      query: { roomId },\r\n    });\r\n\r\n    socketRef.current.on(NEW_CHAT_MESSAGE_EVENT, (message) => {\r\n      const incomingMessage = {\r\n        ...message,\r\n        isCurrentUser: message.senderId === socketRef.current.id,\r\n      };\r\n      setMessages((messages) => [...messages, incomingMessage]);\r\n    });\r\n\r\n    return () => {\r\n      socketRef.current.disconnect();\r\n    };\r\n  }, [roomId]);\r\n\r\n\r\n  const sendMessage = (messageBody) => {\r\n    socketRef.current.emit(NEW_CHAT_MESSAGE_EVENT, {\r\n      body: messageBody,\r\n      senderId: socketRef.current.id,\r\n    });\r\n  };\r\n\r\n  return { messages, sendMessage, setMessages };\r\n};\r\n\r\nexport default useChat;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport * as $ from \"jquery\";\r\nimport './SpotifyTrackMessage.css';\r\nimport TokenContext from './TokenContext';\r\n\r\n\r\n\r\nconst SpotifyTrackMessage = (props) => {\r\nconst context = useContext(TokenContext);  \r\n const regex = /^(spotify:track:|https:\\/\\/[a-z]+\\.spotify\\.com\\/track\\/)([0-9a-z-A-Z]{22})/;\r\n const [image, setImage] = React.useState(\"\");\r\n const [songName, setSongName] = React.useState(\"\");\r\n const [artistName, setArtistName] = React.useState(\"\");\r\n\r\n \r\n const getSongImage = (message) => {\r\n    const array = message.match(regex);\r\n    const songID = array[2];\r\n    $.ajax({\r\n    url: `https://api.spotify.com/v1/tracks/${songID}`,\r\n    type: \"GET\",\r\n    beforeSend: xhr => {\r\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + context.currtoken);\r\n    },\r\n    success: data => {\r\n      if(!data){\r\n        setImage(\"https://i.pinimg.com/originals/d4/e3/60/d4e3604d2811dbe178801f48e6a2ae69.jpg\");\r\n      }\r\n        setImage(data.album.images[0].url);\r\n        setSongName(data.name);\r\n        setArtistName(data.artists[0].name);\r\n    },\r\n    error: error => {\r\n      console.log(error);\r\n        setImage(\"https://i.pinimg.com/originals/d4/e3/60/d4e3604d2811dbe178801f48e6a2ae69.jpg\");\r\n    }\r\n  });\r\n  }\r\n  useEffect(() => {\r\n      getSongImage(props.message);\r\n},[]);\r\n    return(\r\n      <div className=\"song-message-container\">\r\n        <img className=\"search-images\" src={image} />\r\n        <div className=\"song-name\">{songName}</div>\r\n        <div className=\"song-artist\">{artistName}</div>\r\n\r\n      </div>\r\n    )\r\n}\r\n\r\nexport default SpotifyTrackMessage","import React, { useContext, useEffect, useState } from \"react\";\r\nimport * as $ from \"jquery\";\r\nimport './SpotifySearch.css';\r\nimport TokenContext from './TokenContext'\r\nimport SpotifyPlayer from 'react-spotify-web-playback';\r\n\r\nconst SpotifySearch = (props) => {\r\n    const context = useContext(TokenContext);  \r\n    const [topResults, setTopResults] = React.useState([]);\r\n    const [trackName, setTrackName] = React.useState(\"\")\r\n    const numSearchResults = 10; //number of results we want to return\r\n\r\n    // a workaround to programatically trigger the onChange event of the\r\n    // new-message-input-field, so that it sets the new message\r\n    function setNativeValue(element, value) {\r\n        const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\r\n        const prototype = Object.getPrototypeOf(element);\r\n        const prototypeValueSetter = Object.getOwnPropertyDescriptor(prototype, 'value').set;\r\n        \r\n        if (valueSetter && valueSetter !== prototypeValueSetter) {\r\n            prototypeValueSetter.call(element, value);\r\n        } else {\r\n          valueSetter.call(element, value);\r\n        }\r\n      }\r\n    \r\n    const appendSongToMessage = (song) => {\r\n        let textarea = document.getElementById(\"new-message-input-field\")\r\n        setNativeValue(textarea, song + \" \" + textarea.value );\r\n        textarea.dispatchEvent(new Event('input', { bubbles: true }));\r\n    }\r\n\r\n    const getSongSearch = (props) => {\r\n        setTopResults([])\r\n        topResults.length = 0\r\n\r\n        if(trackName != \"\")\r\n        {\r\n        $.ajax({\r\n        url: `https://api.spotify.com/v1/search?q=${trackName}&type=track&limit=${numSearchResults}&offset=0`,\r\n        type: \"GET\",\r\n        beforeSend: xhr => {\r\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + context.currtoken);\r\n        },\r\n        dataType: \"json\",\r\n       \r\n        success: data => {\r\n            if(!data){\r\n              \r\n            }\r\n            // console.log(data);\r\n            data.tracks.items.forEach(element => {\r\n                setTopResults(topResults => [...topResults, element])\r\n            });   \r\n        },\r\n        error: error => {\r\n          console.log(error);\r\n        }\r\n      });\r\n        }\r\n      }\r\n      useEffect(() => {\r\n        // if someone types fast enough, this can get up to length 10, due to asynchronous issues\r\n        topResults.length = 0\r\n        setTopResults([])\r\n        // setTrackName(document.getElementById('searchbar').value)\r\n        getSongSearch(props);\r\n\r\n\r\n    },[trackName]);\r\n    return(\r\n        <div>\r\n        <br></br>\r\n            <input placeholder=\"Search for a song\" type=\"search\" id=\"searchbar\" autoComplete=\"off\" className=\"song-searchbar\" onChange={() => {setTopResults([]);topResults.length=0; setTrackName(document.getElementById('searchbar').value);}} />\r\n        <div className=\"result-container\">\r\n          <ul className=\"result-list\">\r\n              \r\n                  {topResults.slice(0, numSearchResults).map(index => {\r\n\r\n                      return <li className=\"song-info-list-item\">\r\n                      <div>\r\n                        <img className=\"search-images\" key={index.external_urls.spotify} src={index.album.images[0].url} onClick={() => {appendSongToMessage(index.external_urls.spotify);setTopResults([]);topResults.length=0;document.getElementById('searchbar').value=\"\"}}/>\r\n                        {/* <div className=\"song-name\">{index.name}<br></br>{index.artists[0].name}</div> */}\r\n                        <div className=\"song-name\">{index.name}</div>\r\n                        <div className=\"song-artist\">{index.artists[0].name}</div>\r\n\r\n                      </div>\r\n                      </li>\r\n\r\n\r\n                  })}\r\n                  \r\n              \r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n        \r\n    }\r\n    \r\n    export default SpotifySearch","import React, { useContext, useEffect} from \"react\";\r\nimport SpotifyPlayer from 'react-spotify-web-playback';\r\nimport \"./ChatRoom.css\";\r\nimport useChat from \"../hooks/useChat\";\r\nimport TokenContext from './TokenContext';\r\nimport SpotifyTrackMessage from \"./SpotifyTrackMessage\";\r\nimport SpotifySearch from \"./SpotifySearch\";\r\nimport axios from 'axios';\r\nimport * as $ from \"jquery\";\r\n\r\n\r\n\r\n//CREDIT: https://github.com/gilbarbara/react-spotify-web-playback\r\n\r\nconst ChatRoom = (props) => {\r\n\r\n  const context = useContext(TokenContext);\r\n  const spotifyRegex = /(spotify:track:|https:\\/\\/[a-z]+\\.spotify\\.com\\/track\\/)([0-9a-z-A-Z]{22})/g;\r\n  const linkRegex = /(http:|https:|ftp:)\\/\\/[a-zA-Z0-9]+[.][a-z]+\\/*[^ \\n]*/g;\r\n  const { roomId } = props.match.params;\r\n  // const [curUserID, setCurUserID] = React.useState(\"\")\r\n  const [currUserID, setCurrUserID] = React.useState(\"\");\r\n  const { messages, sendMessage, setMessages } = useChat(roomId);\r\n  const [newMessage, setNewMessage] = React.useState(\"\");\r\n  const [currSong, setCurrSong] = React.useState([]);\r\n  const [showPlayer, setShowPlayer] = React.useState(false);\r\n  const [hitEnter, setEnter] = React.useState(false);         //this state tracks if the enter key was hit within the text field\r\n  const [check, setCheck] = React.useState(true);\r\n  const toggle = React.useCallback(() => setCheck(!check));\r\n  const [, updateState] = React.useState();\r\n  const forceUpdate = React.useCallback(() => updateState({}), []);\r\n\r\n  const id = async () => {\r\n    if(!context.currtoken)\r\n    {\r\n      return \"\";\r\n    }\r\n    await $.ajax({\r\n        url: \"https://api.spotify.com/v1/me\",\r\n        type: \"GET\",\r\n        beforeSend: xhr =>{\r\n            xhr.setRequestHeader(\"Authorization\", \"Bearer \" + context.currtoken);\r\n            \r\n        },\r\n        success: data =>{\r\n            if(!data){\r\n                console.log(\"null values\");\r\n            }\r\n            setCurrUserID(data.id);\r\n            console.log(`right after set: ${currUserID}`);\r\n        },\r\n        error: error => {\r\n            console.log(\"IN GET DATA ERROR\", context.currtoken);\r\n            console.log(error);  \r\n        }\r\n    });\r\n  }\r\n  React.useEffect(() => {\r\n    id();\r\n\r\n  })\r\n\r\n  React.useEffect(() => {\r\n    retrieveDetailsFromServer(roomId); //get chat history\r\n  }, [currUserID]);\r\n\r\n  // React.useLayoutEffect(() => {\r\n  //   retrieveDetailsFromServer(\"xG7Y7IoU2\"); //get chat history\r\n  // }, [messages]);\r\n\r\n  const handleNewMessageChange = (event) => {\r\n    event.preventDefault()\r\n    if(hitEnter !== true){                 //if the enter key hasn't been pressed\r\n      setNewMessage(event.target.value);\r\n    }\r\n    setEnter(false);      //set the enter key to false\r\n  };\r\n\r\n  const handleSendMessage = () => {\r\n    if(newMessage === \"\"){\r\n          setNewMessage(\"\");\r\n      return;\r\n    };\r\n    sendMessage(newMessage);\r\n    sendDetailsToServer(newMessage, roomId);\r\n    // This will scroll to the bottom of the messages after a message is sent\r\n    // we want to timeout so that it occurs only after a song is rendered, otherwise\r\n    // it scrolls to the bottom, then renders the song, and now it's no longer at the bottom\r\n    var chats = document.getElementById(\"messages-container\");\r\n    // retrieveDetailsFromServer('xG7Y7IoU2');\r\n    setTimeout(() => {\r\n      chats.scrollTop = 1000000000;\r\n    },100);\r\n    setNewMessage(\"\");\r\n    \r\n  };\r\n\r\n  // add message to db\r\n  const sendDetailsToServer = (message, roomId) => {\r\n    const payload = {\r\n        session: roomId,\r\n        userID: currUserID,\r\n        content: message\r\n    }\r\n    axios.post(`${process.env.REACT_APP_HOST}/messages`, payload).catch(function (err) {\r\n        alert(err.message);\r\n    })\r\n  }\r\n\r\n  // pull message from db\r\n  const retrieveDetailsFromServer = (roomId) => {\r\n    console.log(\"here\");\r\n    if (currUserID) {\r\n      if (check){\r\n        axios.get(`${process.env.REACT_APP_HOST}/messages/${roomId}`, {\r\n          params: {\r\n            id: roomId\r\n          },\r\n          headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }, { responseType: 'json' }).then((res) => {\r\n          // setMessages((messages) => []);\r\n          console.log(\"retrive from db here\");\r\n          for (let i = 0; i < res.data.length; i++) {\r\n            if(res.data[i].sender_id == currUserID)\r\n            {\r\n              // sendMessage(res.data[i].content, true);\r\n              const incomingMessage = {\r\n                body: res.data[i].content,\r\n                senderId: res.data[i].sender_id,\r\n                isCurrentUser: true,\r\n              };\r\n              setMessages((messages) => [...messages, incomingMessage]);\r\n            }\r\n            else{\r\n              const incomingMessage = {\r\n                body: res.data[i].content,\r\n                senderId: res.data[i].sender_id,\r\n                isCurrentUser: false,\r\n              };\r\n              setMessages((messages) => [...messages, incomingMessage]);\r\n              // sendMessage(res.data[i].content, false);\r\n            }\r\n          }\r\n        }).catch(function (err) {\r\n          console.log(err.type);\r\n        });\r\n        toggle();\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleEnter = e => {    //handle enter function\r\n    if (e.keyCode === 13) {      //if the user hits enter\r\n      setEnter(true)            //set enter to true, the key has been hit\r\n      handleSendMessage()       //call the send message function (basically hit send button)\r\n    }\r\n  };\r\n\r\n\r\n  //Checking if message contains spotify track using JS regex.\r\n  const isMessageSpotifyTrack = (body) =>{\r\n    if(spotifyRegex.test(body)){\r\n      return true;\r\n    }\r\n      return false\r\n  }\r\n\r\n  //Checking if message contains a url using JS regex\r\n  const isMessageLink = (body) => {\r\n    if(linkRegex.test(body)){\r\n      return true\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // const setSpotifyURIQueue = (message) => {\r\n  //   const array = message.match(spotifyRegex);\r\n  //   const songID = array[2];\r\n  //   const res = \"spotify:track:\".concat(songID);\r\n  //   const arr = currSong;\r\n  //   arr.push(res);\r\n  //   setCurrSong(arr);\r\n  // }\r\n\r\n  const setSpotifyURI = (message) => {\r\n  const array = message.match(/(spotify:track:|https:\\/\\/[a-z]+\\.spotify\\.com\\/track\\/)([0-9a-z-A-Z]{22})/);\r\n  const songID = array[2];\r\n  const res = \"spotify:track:\".concat(songID);\r\n  const arr = [res];\r\n  setCurrSong(arr);\r\n  }\r\n\r\n  return (\r\n  <div className=\"chat-room-page\">\r\n   <div className=\"chat-room-container\">\r\n    <h1 className=\"chat-room-title\">Chat Room</h1>\r\n      <h2 className=\"room-name\">{currUserID}</h2>\r\n      <div>\r\n        <SpotifySearch>SPOTIFY SEARCH</SpotifySearch>\r\n      </div>\r\n        <div className=\"messages-container\" id=\"messages-container\">\r\n          <ol className=\"messages-list\">\r\n          {\r\n            // console.log(`${messages}`),\r\n           console.log(messages.length),\r\n           messages.map((message, i) => {\r\n             if(isMessageSpotifyTrack(message.body)){\r\n              const spotifyLinkSet = new Set((message.body).match(spotifyRegex));\r\n              const spotifyLinks = Array.from(spotifyLinkSet);\r\n              const restofMessage = (message.body).replace(/[ \\n]*spotify:track:|https:\\/\\/[a-z]+\\.spotify\\.com\\/track\\/([0-9a-z-A-Z]{22})([?]si=[a-zA-Z0-9]{22})?([ \\n]*)/g,'');\r\n              const isRestOfMessageEmpty = restofMessage === '';\r\n              return (\r\n                  <div>\r\n                      {!isRestOfMessageEmpty ? <li key={i} className={`message-item ${ message.isCurrentUser ? \"my-message\" : \"received-message\" }`}>\r\n                            <div>\r\n                                {restofMessage}\r\n                            </div>\r\n                        </li> : null}\r\n                    {spotifyLinks.map((spotifyLink,m_key)=>{\r\n                        return(\r\n                          <li key={m_key} className={`message-item ${ message.isCurrentUser ? \"my-message\" : \"received-message\" }`}>\r\n                              <div  onClick={()=> {\r\n                                  setSpotifyURI(spotifyLink);\r\n                                  setShowPlayer(true);\r\n                                }}>\r\n                                  <SpotifyTrackMessage message={spotifyLink}  />\r\n                            </div>\r\n                          </li>\r\n                        )\r\n                      })\r\n                    }\r\n\r\n              </div>\r\n              )\r\n            }\r\n            else if(isMessageLink(message.body)){\r\n\r\n              const words = message.body.split(' ');\r\n              return(\r\n                <li key={i} className={`message-item ${ message.isCurrentUser ? \"my-message\" : \"received-message\" }`}>\r\n                {words.map((word,j)=>{\r\n                  const tempRegex = /(http:|https:|ftp:)\\/\\/[a-zA-Z0-9]+[.][a-z]+\\/*[^ \\n]*/g;\r\n                  const isLink = tempRegex.test(word);\r\n                    return(\r\n                      //TODO: THOMAS ADD CSS HERE PLZ TO CUT OUT NEW LINES BETWEEN THE TAGS\r\n                      <div key={j}>\r\n                        {isLink ? <a href={word} target=\"_blank\" rel=\"noreferrer\">{word} </a> : <div>{word}</div>}\r\n                      </div>\r\n                    )\r\n                })}\r\n                  </li>\r\n              )\r\n            }\r\n            else{\r\n              return (<li key={i} className={`message-item ${ message.isCurrentUser ? \"my-message\" : \"received-message\" }`}>\r\n                          {message.body}\r\n                     </li>)\r\n            }\r\n          })}\r\n        </ol>\r\n      </div>\r\n\r\n      <textarea\r\n        className=\"new-message-input-field\"\r\n        value={newMessage}\r\n        onKeyDown={handleEnter}\r\n        onChange={handleNewMessageChange}\r\n        placeholder=\"Write message...\"\r\n        id=\"new-message-input-field\"\r\n        onKeyPress={e => e.key === 'Enter' ? handleSendMessage() : null}\r\n\r\n\r\n      />\r\n      <button onClick={handleSendMessage} className=\"send-message-button\">\r\n        Send\r\n      </button>\r\n\r\n      {/* <div>\r\n        <SpotifySearch>SPOTIFY SEARCH</SpotifySearch>\r\n      </div> */}\r\n\r\n        <div>\r\n          {showPlayer ? <button onClick={() => setShowPlayer(false)}>\r\n            <img src=\"https://1001freedownloads.s3.amazonaws.com/vector/thumb/70571/close-button.png\" className=\"x-button\"/>\r\n          </button> : null}\r\n        </div>\r\n\r\n      <div>\r\n        {showPlayer ? <SpotifyPlayer\r\n          token={context.currtoken}\r\n          uris={currSong}\r\n          autoPlay=\"true\"\r\n          showSaveIcon=\"true\"\r\n          name=\"Auxswap\"\r\n          /> : null}\r\n      </div>\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n};\r\n\r\nexport default ChatRoom;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport * as $ from \"jquery\";\r\nimport './ChatUserSearch.css';\r\nimport TokenContext from './TokenContext'\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from 'axios';\r\nimport ChatRoom from \"./ChatRoom\";\r\n\r\nconst SpotifyUserSearch = (props) => {\r\n    const context = useContext(TokenContext);  \r\n    const [userID, setUserID] = useState('');\r\n    const [userDisplayName, setUserDisplayName] = useState('');\r\n    const [userImage, setUserImage] = useState('');\r\n    const [sessionID, setSessionID] = useState(''); \r\n    const [curUserID, setcurUserID] = useState('');\r\n\r\n    const id = async () => {\r\n      if(!context.currtoken)\r\n      {\r\n        return \"\";\r\n      }\r\n      await $.ajax({\r\n          url: \"https://api.spotify.com/v1/me\",\r\n          type: \"GET\",\r\n          beforeSend: xhr =>{\r\n              xhr.setRequestHeader(\"Authorization\", \"Bearer \" + context.currtoken);\r\n              \r\n          },\r\n          success: data =>{\r\n              if(!data){\r\n                  console.log(\"null values\");\r\n              }\r\n              setcurUserID(data.id);\r\n          },\r\n          error: error => {\r\n              console.log(\"IN GET DATA ERROR\", context.currtoken);\r\n              console.log(error);  \r\n          }\r\n      });\r\n    }\r\n    React.useEffect(() => {\r\n      id();\r\n    })\r\n\r\n    const getUserSearch = (props) => {\r\n\r\n      if(userID !== '')\r\n      {\r\n      $.ajax({\r\n      url: `https://api.spotify.com/v1/users/${userID}`,\r\n      type: \"GET\",\r\n      beforeSend: xhr => {\r\n          xhr.setRequestHeader(\"Authorization\", \"Bearer \" + context.currtoken);\r\n      },\r\n      dataType: \"json\",\r\n      \r\n      success: data => {\r\n          if(!data){\r\n          }\r\n          else if(typeof(data) == undefined)\r\n          {\r\n\r\n          }\r\n          else\r\n          {\r\n            console.log(`userData: ${data}`);\r\n            setUserDisplayName(data.display_name);\r\n            if(data.images.length > 0)\r\n            {\r\n                setUserImage(data.images[0].url);\r\n            }\r\n            else\r\n            {\r\n                setUserDisplayName(\"User does not exist\");\r\n                setUserImage(\"\");\r\n            }\r\n          } \r\n      },\r\n      error: error => {\r\n        console.log(error);\r\n      }\r\n    });\r\n      }\r\n      else\r\n      {\r\n        setUserID(\"\");\r\n        setUserDisplayName(\"\");\r\n        setUserImage(\"\");\r\n              \r\n      }\r\n    }\r\n    useEffect((props) => {\r\n      getUserSearch();\r\n    },[userID]);\r\n    \r\n    // TODO: clicking too fast can result multiple chat sessions, and change chat room title to your chat mate\r\n    // TODO: make sure clicking yourself \r\n    // TODO: fix auto scroll when someone sends messages\r\n    // check the session between two person, if exists, then return session id, else create session\r\n    const getSession = async() => {\r\n      await axios.get(`${process.env.REACT_APP_HOST}/session/${userID}/${curUserID}`, {\r\n        params: {\r\n          user1: userID,\r\n          user2: curUserID\r\n        },\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n        },\r\n      }).then((res) => {\r\n        if (res.data.length == 0)\r\n        {\r\n          console.log(\"Its empty, need to post add one\");\r\n          // create seesion\r\n          const payload = {\r\n            user1: curUserID,\r\n            user2: userID\r\n          }\r\n          axios.post(`${process.env.REACT_APP_HOST}/sessions`, payload).then((res) => {\r\n            setSessionID(res.data[1]);\r\n            console.log(`successful: ${res.data[1]}`);\r\n          }).catch(function (err) {\r\n            console.log(`err: ${err.message}`);\r\n          })\r\n        }\r\n        else {\r\n          setSessionID(res.data[0].session_id);\r\n          console.log(\"Already exist\");\r\n        }\r\n        \r\n      }).catch(function (err) {\r\n        console.log(`err: ${err.message}`);\r\n      });\r\n    }\r\n\r\n    return(\r\n        <div className=\"ChatUserSearch-container\">\r\n        <br></br>\r\n            <input placeholder=\"Search for a user\" type=\"search\" id=\"user_searchbar\" autoComplete=\"off\" className=\"user-searchbarChatUserSearch\" onChange={() => {setUserID(document.getElementById('user_searchbar').value.toLowerCase())}} />\r\n                  {userDisplayName!=='' && userImage!=='' ? <div className=\"result-containerChatUserSearch\">\r\n                        <ul className=\"result-listChatUserSearch\" id=\"result-listChatUserSearch\">\r\n                        <li className=\"user-info-itemChatUserSearch\">\r\n                        <div>\r\n\r\n                          {/* <button><img onClick={getSession}className=\"search-imageChatUserSearch\" src={userImage}/></button> */}\r\n                          <Link to={`/chat/${sessionID}`}>\r\n\r\n                            <img onClick={getSession}className=\"search-imageChatUserSearch\" src={userImage}/>\r\n                          </Link>\r\n                         \r\n                        <div className=\"user-display-nameChatUserSearch\">{userDisplayName}</div>\r\n                      </div>\r\n                      </li>\r\n          </ul>\r\n        </div>\r\n : null}\r\n\r\n{userDisplayName!=='' && userImage=='' ? <div className=\"result-containerChatUserSearch\">\r\n                        <ul className=\"result-listChatUserSearch\" id=\"result-listChatUserSearch\">\r\n                        <li className=\"user-info-itemChatUserSearch\">\r\n                        <div>\r\n\r\n                        <div className=\"user-display-nameChatUserSearch_2\">{userDisplayName}</div>\r\n                      </div>\r\n                      </li>\r\n          </ul>\r\n        </div>\r\n : null}\r\n\r\n      </div>\r\n    )\r\n    \r\n  }\r\n    \r\n  export default SpotifyUserSearch","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport NavBar from '../components/navBar';\r\nimport \"./ChatHome.css\";\r\nimport ChatUserSearch from '../components/ChatUserSearch'\r\n\r\n\r\nconst ChatHome = () => {\r\n  const [roomName, setRoomName] = React.useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const handleRoomNameChange = (event) => {\r\n    setRoomName(event.target.value);\r\n  };\r\n\r\nconst handleClick = () => {\r\n  history.push(`/chat/${roomName}`);\r\n}\r\n\r\nconst handleEnter = e => {    //handle enter function\r\n  if (e.keyCode === 13) {      //if the user hits enter\r\n    handleClick()       //call the send message function (basically hit send button)\r\n  }\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"home-container\">\r\n        <ChatUserSearch></ChatUserSearch>\r\n      </div>\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatHome;\r\n","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport ChatHome from \"./ChatHome.js\";\r\nimport Party from '../pages/Party';\r\nimport ChatRoom from \"../components/ChatRoom\";\r\nimport PlayerPage from '../pages/PlayerPage';\r\nimport Home from '../components/Home';\r\n\r\nfunction Chat() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/chat\" component={ChatHome} />\r\n        <Route exact path=\"/home\" component={Home} />\r\n        <Route exact path=\"/chat/:roomId\" component={ChatRoom} />\r\n        <Route exact path=\"/player\" component={PlayerPage}/>\r\n        <Route exact path=\"/party\" component={Party}/>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Chat;","import {useEffect,useState} from 'react'\r\nimport \"./activeBox.css\"\r\nexport default function ActiveBox(members) {\r\n    const [usersInRoom,setUsers]=useState()\r\n    useEffect(()=>{\r\n        //console.log(members)\r\n        setUsers(members.members)\r\n    },[members])\r\n    return (\r\n        <div className=\"userContainer\">\r\n            {usersInRoom? usersInRoom.map(({name,data,id})=>(\r\n                     <div className = \"userBlock\"key={id}>\r\n                         <img src={data} className=\"userIcon\"></img>\r\n                         <div className=\"userName\">{name}</div>\r\n                     </div>\r\n                 )):null}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport \"./SongTab.css\"\r\n\r\nexport default function SongTab({song,setsong}) {\r\n    function handleClick(){\r\n        if(!song)return\r\n        setsong(song)\r\n    }\r\n    return (\r\n        // <div className=\"song-tab\"onClick={handleClick}>\r\n        //    <img src={song.image}/>\r\n        //    <div className=\"song-name-party\">{song.songName}</div>\r\n        //    <div className=\"artist-name-party\">{song.artist}</div>\r\n        // </div>\r\n\r\n        <div className=\"song_re\">\r\n          <ul className=\"result-list-party\">\r\n\r\n                 <li className=\"song-info-list-item-party\" onClick={handleClick}>\r\n                      <div>\r\n                        <img className=\"search-images\" src={song.image} />\r\n                        <div className=\"song-name\">{song.songName}</div>\r\n                        <div className=\"song-artist\">{song.artist}</div>\r\n                      </div>\r\n                </li>\r\n\r\n\r\n          </ul>\r\n        </div>\r\n    )\r\n}\r\n","import { useState, useEffect } from 'react'\r\nimport { FormControl } from 'react-bootstrap';\r\nimport \"./SearchBar.css\";\r\nimport SongTab from \"./SongTab\"\r\nexport default function SearchBar({api,handleSongSend}) {\r\n\r\n    const [currentApi, setApi] = useState()\r\n    const [useForSearch, setUseSearch] = useState(\"\")\r\n    const [result, setresult] = useState([])\r\n    \r\n\r\n    //console.log(result)\r\n\r\n    function setsong(song){\r\n        \r\n        handleSongSend(song)\r\n        //console.log(song)\r\n        setUseSearch(\"\")\r\n    }\r\n    useEffect(() => {\r\n        if (!api) return\r\n        setApi(api)\r\n    }, [api])\r\n    useEffect(() => {\r\n        if (!currentApi) return\r\n        if (!useForSearch) return setresult([])\r\n       \r\n        currentApi.searchTracks(useForSearch).then((data) => {\r\n            setresult(\r\n                data.body.tracks.items.map(track => {\r\n                    return {\r\n                        songName: track.name,\r\n                        artist: track.artists[0].name,\r\n                        image: track.album.images[2].url,\r\n                        songUrl: track.uri\r\n                    }\r\n\r\n                })\r\n            )\r\n        })\r\n    }, [useForSearch, currentApi])\r\n    return (\r\n        <div className=\"search-box\">\r\n            <FormControl\r\n                type=\"search\"\r\n                placeholder=\"Enter song name\"\r\n                value={useForSearch}\r\n                onChange={event => setUseSearch(event.target.value)}\r\n                className=\"search-bar\"\r\n            />\r\n            <div className=\"song-box\">\r\n                {\r\n                    result.map(song=>(\r\n                        <SongTab song={song} key={song.songUrl} setsong={setsong}/>\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n            <div className=\"decision-box\">\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './SongQueue.css'\r\n\r\nexport default function SongQueue({song}) {\r\n  \r\n    return (\r\n        <div>\r\n            <div>\r\n                <ul className=\"result-list-party\">\r\n                    <li className=\"song-info-list-item-party\">\r\n                        <img className=\"search-images-party\" src={song.image}/>\r\n                        <div className=\"song-name-party\">{song.songName}</div>\r\n                        <div className=\"artist-name-party\">{song.artist}</div>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import { useContext, useEffect, useRef, useState } from \"react\";\r\nimport socketIOClient from \"socket.io-client\";\r\nimport TokenContext from '../components/TokenContext';\r\nimport * as $ from \"jquery\";\r\nconst SOCKET_SERVER_URL = process.env.REACT_APP_HOST;\r\nconst Join_event = \"newJoin\";\r\nconst Get_room_data = \"get_room_data\";\r\nconst SS_event=\"song_send\"\r\nconst Get_topList=\"get_top_list\"\r\nconst next_song = \"get_next\"\r\nconst useParty = (props) => {\r\n    const [Username, setname] = useState('')\r\n    const [roomNum, setroomNum] = useState()\r\n    const [Userimage, setimage] = useState('')\r\n    const context = useContext(TokenContext)\r\n    const [memberlist, setMemberlist] = useState()\r\n    const [songList,setsonglist] = useState()\r\n    const [currentSong,setcurrentSong]=useState()\r\n    const socketRef = useRef();\r\n    \r\n    \r\n    function SDKPlay(songUrl){\r\n        $.ajax({\r\n            url: \"https://api.spotify.com/v1/me/player/play?device_id=\" + window.onSpotifyWebPlaybackSDKReady().SDK_ID,\r\n            type: \"PUT\",\r\n            data: '{\"uris\": [\"'+songUrl+'\"]}',\r\n            beforeSend: function(xhr){xhr.setRequestHeader('Authorization', 'Bearer ' + context.currtoken );},\r\n           });\r\n    }\r\n    useEffect(() => {\r\n        //console.log(\"called first ?\")\r\n        window.onbeforeunload = function () { return false; }\r\n        setroomNum(props.room)\r\n        \r\n        props.setAPi(props.spotify.setAccessToken(context.currtoken))\r\n        \r\n        props.spotify.getMe().then((data) => {\r\n            setimage(data.body.images[0].url)\r\n            setname(data.body.display_name)\r\n        }, (error) => {\r\n            console.log(error)\r\n        })\r\n    }, [props.room, context.currtoken])\r\n    \r\n    useEffect(() => {\r\n       \r\n        if (Username != '' && Userimage != '') {\r\n            \r\n            socketRef.current = socketIOClient(SOCKET_SERVER_URL, { query:roomNum });\r\n            \r\n            socketRef.current.emit(Join_event, { name: Username , data: Userimage ,room:roomNum })\r\n            \r\n            socketRef.current.on(Get_room_data,({ users })=>{\r\n                setMemberlist(users);\r\n            });\r\n            socketRef.current.on(SS_event,({songs})=>{\r\n                setsonglist(songs);  \r\n            });\r\n            socketRef.current.on(Get_topList,({song})=>{\r\n                setcurrentSong(song)\r\n            });\r\n            peakTop()\r\n            return () => {\r\n                socketRef.current.disconnect();\r\n                window.onSpotifyWebPlaybackSDKReady().SDK_object.disconnect()\r\n            }\r\n        }\r\n    }, [Username, Userimage,roomNum]);\r\n    const sendSong=(song)=>{\r\n        socketRef.current.emit(SS_event,{song})\r\n       \r\n    }\r\n    const nextSong=()=>{\r\n        console.log(\"next....\")\r\n        socketRef.current.emit(next_song)\r\n        socketRef.current.on(SS_event,({songs})=>{\r\n                setsonglist(songs);  \r\n            });\r\n      \r\n    }\r\n    const peakTop = ()=>{\r\n        socketRef.current.emit(Get_topList)\r\n        socketRef.current.on(Get_topList,({song})=>{\r\n            setcurrentSong(song)\r\n        });\r\n    }\r\n    return {memberlist,songList,sendSong,currentSong,peakTop,nextSong,SDKPlay}\r\n};\r\n\r\nexport default useParty;","import React from \"react\";\r\nimport NavBar from './navBar';\r\nimport { useState,useEffect,useLayoutEffect} from \"react\";\r\nimport ActiveBox from \"./Party_components/activeBox\"\r\nimport SearchBar from \"./Party_components/SearchBar\"\r\nimport SongQueue from \"./Party_components/SongQueue\"\r\nimport CurrentPlay from\"./Party_components/CurrentPlay\"\r\nimport useParty from \"../hooks/useParty\";\r\n\r\nimport \"./PartyRoom.css\"\r\n\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\nconst sp = new SpotifyWebApi()\r\n\r\nfunction PartyRoom(props){\r\n    \r\n    \r\n    const {roomId} = props.match.params;\r\n    const [spotifyApi,setAPi]=useState(sp)\r\n    const [member,setmember] = useState()\r\n    const [localsongList,setSonglist] = useState([])\r\n    const [localSDK,setSDK]=useState()\r\n    const  party= useParty({room:roomId,spotify:spotifyApi,setAPi});\r\n    //console.log(localsongList)\r\n    function handleSongSend(song){\r\n        party.sendSong(song)\r\n    }\r\n    function handleVolume(event){\r\n        if(!window.onSpotifyWebPlaybackSDKReady().SDK_object) return\r\n        if(!localSDK) return\r\n        var volume = event.target.value / 100;\r\n        if(volume === 0){\r\n            volume = 0.0000000000001;\r\n        }\r\n\r\n        localSDK.setVolume(parseFloat(volume));\r\n        console.log(volume);\r\n    }\r\n    useLayoutEffect(()=>{\r\n        if(!window.onSpotifyWebPlaybackSDKReady().SDK_object) return\r\n        setSDK(window.onSpotifyWebPlaybackSDKReady().SDK_object)\r\n    })\r\n   \r\n    useEffect(()=>{\r\n        if(!party.songList) return\r\n        setSonglist(party.songList)\r\n        party.peakTop()\r\n    },[party.songList])\r\n    \r\n    useEffect(()=>{\r\n        setmember(party.memberlist)\r\n    },[party.memberlist])\r\n    useEffect(()=>{\r\n        if(!party.currentSong) return\r\n        if(!localSDK) return\r\n        localSDK.getCurrentState().then(state=>{\r\n            if(!state){\r\n                party.SDKPlay(party.currentSong.songUrl)\r\n                return\r\n            }\r\n            if(state.track_window.current_track.uri!=party.currentSong.songUrl)\r\n            {\r\n                party.SDKPlay(party.currentSong.songUrl)\r\n                return\r\n            }\r\n        })\r\n    },[party.currentSong])\r\n    useEffect(()=>{\r\n        if(!localSDK) return\r\n        const interv=setInterval(()=>{\r\n            localSDK.getCurrentState().then(state=>{\r\n                if(!state) return\r\n                console.log(state)\r\n                if(state.paused==true)\r\n                {\r\n                    if(localsongList.length>0)\r\n                    {\r\n                        party.nextSong()\r\n                    }\r\n                    \r\n                }\r\n            })\r\n        },1000)\r\n        return ()=>{\r\n            clearInterval(interv)\r\n        }\r\n    })\r\n   \r\n    return(\r\n        <div>\r\n            <div className=\"party-room-container\">\r\n                <h1 className=\"party-room-title\">Party room</h1>\r\n                <h2 className=\"party-room-name\" >Room: {roomId}</h2>\r\n                <div className=\"user-container\">\r\n                    <div className=\"volume_control\">\r\n                        <input type=\"range\" min=\"0\" max=\"100\" className=\"slider\" onChange={handleVolume}></input>\r\n                    </div>\r\n                    <h3 className=\"user-title\">Active Users</h3>\r\n                \r\n                <ActiveBox members={member}/>\r\n                \r\n                </div>\r\n                <div className=\"Search-Bar\">\r\n                <SearchBar api={spotifyApi} handleSongSend={handleSongSend}/>\r\n                </div>\r\n                <div className=\"song-container\">\r\n                    {localsongList.map((song)=>\r\n                        \r\n                        (<SongQueue song={song} key={song.songUrl}/>)\r\n                    )}\r\n                \r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default PartyRoom;","import React from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\n\r\nimport PartyHome from \"./PartyHome.js\";\r\nimport Chat from '../pages/Chat';\r\nimport PartyRoom from \"../components/PartyRoom\";\r\nimport PlayerPage from '../pages/PlayerPage';\r\n\r\nfunction Party() {\r\n\r\n  return (\r\n\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/party\" component={PartyHome} />\r\n        <Route exact path=\"/party/:roomId\" component={PartyRoom} />\r\n        <Route exact path=\"/player\" component={PlayerPage}/>\r\n        <Route exact path=\"/chat\" component={Chat}/>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default Party;\r\n","import React, {useContext, useEffect, useState} from 'react';\r\nimport TokenContext from \"./TokenContext\";\r\nimport Party from '../pages/Party';\r\nimport Chat from '../pages/Chat';\r\nimport {\r\n  BrowserRouter as Router,\r\n  NavLink,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport './Home.css';\r\nimport logo from '../images/logo_1_transparent.png'\r\nimport './navBar.css';\r\n\r\nfunction NavBar(props){\r\n    const [displayname, setDisplayName] = React.useState(\"\");\r\n    const [imageurl,setImageUrl] = React.useState(\"\");\r\n\r\n    useEffect(() => {\r\n        setDisplayName(props.displayname);\r\n        setImageUrl(props.imageurl);\r\n  }, [props.imageurl,props.displayname]);\r\n\r\n    return(\r\n    <nav className=\"navClass\">\r\n    <div>\r\n    </div>\r\n            <ul className=\"navList\">\r\n                <li className =\"navListElementsLogo\">\r\n                    <NavLink to=\"/home\">\r\n                        <img src={logo} className=\"navLogo\" />\r\n                    </NavLink>\r\n                </li>\r\n                <li className =\"navListElements\">\r\n                    <NavLink to=\"/chat\"> Chat </NavLink>\r\n                </li>\r\n                <li className =\"navListElements\">\r\n                    <NavLink to=\"/party\"> Party </NavLink>\r\n                </li>\r\n                <div className=\"userNav\">\r\n                    <li><img className=\"navImage\" src={imageurl}/></li>\r\n                    <li className=\"displayName\"> {displayname} </li>\r\n                   \r\n                </div>\r\n            </ul>\r\n    </nav>\r\n    );\r\n\r\n}\r\n\r\nexport default NavBar","import React, { useContext, useEffect } from \"react\";\r\nimport * as $ from \"jquery\";\r\nimport Player from \"../components/Player\";\r\nimport './PlayerPage.css';\r\nimport logo from '../logo.svg';\r\nimport TokenContext from \"../components/TokenContext\";\r\nimport NavBar from '../components/navBar';\r\n\r\nfunction PlayerPage() {\r\n\r\nconst context = useContext(TokenContext);\r\n\r\nconst[item, setItem] = React.useState({album: {images: [{url: \"\"}]}, name: \"\", artists: [{name: \"\"}], duration_ms: 0});\r\nconst[is_playing, setIs_playing] = React.useState(\"Paused\");\r\nconst[progress_ms, setProgress_ms] = React.useState(0);\r\nconst[NoData, setNoData] = React.useState(false);\r\nconst[didErrorOccur, setDidErrorOccur] = React.useState(false);\r\n\r\n\r\n//This uses fetch... \r\n// const getDatav2 = async (token) => {\r\n//   const settings = {\r\n// headers: {'Authorization': 'Bearer ' + token}\r\n// }\r\n//   const response = await fetch('https://api.spotify.com/v1/me/player',settings);\r\n//   const data = await response.json();\r\n//         if(!data){\r\n//         setNoData(true);\r\n//         return;\r\n//       }\r\n//       console.log(data);\r\n//       setItem(data.item);\r\n//       setIs_playing(data.is_playing);\r\n//       setProgress_ms(data.progress_ms);\r\n//       setNoData(false);\r\n// }\r\n\r\n//Original API call function... this uses ajax(a jQuery function) to preform it...\r\nfunction getData() {\r\n  $.ajax({\r\n    url: \"https://api.spotify.com/v1/me/player\",\r\n    type: \"GET\",\r\n    beforeSend: xhr => {\r\n        xhr.setRequestHeader(\"Authorization\", \"Bearer \" + context.currtoken);\r\n    },\r\n    success: data => {\r\n      if(!data){\r\n        setNoData(true);\r\n        return;\r\n      }\r\n      setItem(data.item);\r\n      setIs_playing(data.is_playing);\r\n      setProgress_ms(data.progress_ms);\r\n      setNoData(false);\r\n    },\r\n    error: error => {\r\n      console.log(error);\r\n      setNoData(true);\r\n      setDidErrorOccur(true);\r\n\r\n    }\r\n  });\r\n}\r\n\r\n\r\n\r\n//TODO: DO NOT DELETE THE COMMENTED CODE DOWN BELOW. WE SHOULD PROBABLY CHOOSE THE BEST WAY TO USE THE \"useEffect\" CALLS. SO SHOULD WE \r\n// USE STATE VARIABLES OR THE VARIABLES WE DELCARE IN THE \"useEffect\" FUNCTIONS....\r\n\r\n\r\n// A useEffect is triggered after a component FIRST renders. The useEffect will be called, and then the component will be updated accordingly.\r\n// See here: https://reactjs.org/docs/hooks-effect.html#:~:text=What%20does%20useEffect%20do%3F,after%20performing%20the%20DOM%20updates.\r\n//A useEffect within a component will only be called again if a value in its dependency list ( the '[]' at the end of the line) is modifed.\r\n\r\n//For example, the first useEffect here has no dependencies, so it will only be called once to retrieve the value of the token in the hash\r\n//if it exists.\r\n\r\n  // useEffect(() => {\r\n  // const localToken = window.sessionStorage.getItem('token');\r\n  //   if(localToken) {\r\n  //   setCurrToken(localToken);\r\n  // }\r\n  // else {\r\n  // let token = hash.access_token\r\n  // if(token) {\r\n  //     setCurrToken(token);\r\n  //     window.sessionStorage.setItem('token',token);\r\n  // }\r\n  //  }\r\n  // }, []);\r\n\r\n  \r\n  //This useEffect will trigger after the component first renders, and then it will trigger whenever 'currtoken' is modified, because 'currtoken' is in its dependencies list.\r\n  //   useEffect(() => {\r\n  //     async function fetchData() {\r\n  //       if(currtoken != null){\r\n  //         getDatav2(currtoken);\r\n  //       }\r\n  //     }\r\n  //     fetchData();\r\n  // }, [currtoken]);\r\n\r\n  useEffect(() => {\r\n      getData();\r\n}, [context.currtoken]);\r\n\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <NavBar/>\r\n        <header className=\"App-header\">\r\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          {!NoData && (\r\n            <Player\r\n              item={item}\r\n              is_playing={is_playing}\r\n              progress_ms={progress_ms}\r\n            />\r\n          )}\r\n          {NoData && didErrorOccur && (\r\n            <p>\r\n                Uh oh! An error occurred when making contact with the API :(\r\n            </p>\r\n          )}\r\n          {NoData && !didErrorOccur && (\r\n            <p>\r\n              Are you logged into Spotify? Make sure you are logged in AND that something is playing.\r\n            </p>\r\n          )}\r\n        </header>\r\n      </div>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default PlayerPage","import React from 'react';\r\nimport PlayerPage from '../pages/PlayerPage';\r\nimport Party from '../pages/Party';\r\nimport Chat from '../pages/Chat';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport './Home.css';\r\nimport logo from '../images/logo_1_transparent.png'\r\nimport NavBar from './navBar';\r\n\r\n\r\nfunction Home(){\r\n\r\nreturn(\r\n    <div>\r\n            {/* <header className=\"App-header\">\r\n            </header> */}\r\n            <header className=\"head1\">Welcome to AuxSwap!</header>\r\n            <img src={logo} className=\"logoHome\" />\r\n            <div class=\"row\">\r\n                <NavLink to=\"/chat\">\r\n                <div class=\"column\">\r\n                    <h2 className=\"head2\">Chat</h2>\r\n                    <ul>\r\n                    <li className=\"bullets\">Chat with friends</li>\r\n                        <li className=\"bullets\">Search and share songs</li> \r\n                        <li className=\"bullets\">Play songs directly in the chat</li> \r\n                    </ul>\r\n                </div>\r\n                </NavLink>\r\n                <NavLink to=\"/party\">\r\n                <div class=\"column2\">\r\n                    <h2 className=\"head2\">Party Lobbies</h2>\r\n                    <ul>\r\n                    <li className=\"bullets\">Join lobbies to listen together</li>\r\n                        <li className=\"bullets\">Add songs to the queue</li>\r\n                        <li className=\"bullets\">Hear new music and share with your friends</li>\r\n                       \r\n                    </ul>\r\n                </div>\r\n                </NavLink>\r\n            </div>\r\n\r\n            {/* <ul>\r\n                <li>\r\n                    <NavLink to=\"/chat\"> Chat </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/party\"> Party </NavLink>\r\n                </li>\r\n                <li>\r\n                    <NavLink to=\"/player\"> Player</NavLink>\r\n                </li>\r\n            </ul> */}\r\n\r\n    \r\n{/*  Why doesn't this work?\r\n            <Switch>\r\n                <Route exact path=\"/chat\">\r\n                    <Chat/>\r\n                </Route>\r\n                <Route exact path=\"/party\">\r\n                    <Party/>\r\n                </Route>\r\n                <Route exact path=\"/player\">\r\n                    <PlayerPage/>\r\n                </Route>\r\n            </Switch> */}\r\n    </div>\r\n);\r\n}\r\n export default Home\r\n","import React, { useEffect } from 'react';\r\n\r\n\r\nfunction Callback(props) {\r\n\r\nuseEffect(() => {\r\n    const hash = window.location.hash.substring(1).split(\"&\").reduce(function(initial,item) {\r\n        if(item) {\r\n            let parts = item.split(\"=\");\r\n            initial[parts[0]] = decodeURIComponent(parts[1]);\r\n            console.log(decodeURIComponent(parts[1]));\r\n        }\r\n        return initial;\r\n    }, {});\r\n    let token = hash.access_token;\r\n    let refresh = hash.refresh_token;\r\n    if (token && refresh) {\r\n      props.updateToken(token,refresh);\r\n    }\r\n    else if(token){\r\n      props.JustToken(token);\r\n    }\r\n  }, [props]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default Callback;","import React, { useEffect } from \"react\";\r\nimport './App.css';\r\nimport * as $ from \"jquery\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport TokenContext from \"./components/TokenContext\";\r\nimport RefreshTokenContext from \"./components/RefreshTokenContext\";\r\nimport Login from './components/Login';\r\nimport Home from './components/Home';\r\nimport Callback from './components/Callback';\r\nimport Party from './pages/Party';\r\nimport Chat from './pages/Chat';\r\nimport NavBar from \"./components/navBar\";\r\n\r\n\r\n\r\nfunction App() {\r\n  const[currtoken, setCurrToken] = React.useState(null);\r\n  const[refreshcurrtoken, setRefreshCurrToken] = React.useState(null);\r\n  const [displayname, setDisplayName] = React.useState(\"\");\r\n  const [imageurl,setImageUrl] = React.useState(\"\");\r\n\r\n    useEffect(() => {\r\n\r\n      const fetchData = async (token) => {\r\n       await $.ajax({\r\n          url: \"https://api.spotify.com/v1/me\",\r\n          type: \"GET\",\r\n          beforeSend: xhr =>{\r\n              xhr.setRequestHeader(\"Authorization\", \"Bearer \" + token);\r\n              \r\n          },\r\n          success: data =>{\r\n              if(!data){\r\n                  console.log(\"null values\");\r\n              }\r\n              setDisplayName(data.display_name);\r\n              setImageUrl(data.images[0].url);\r\n          },\r\n          error: error => {\r\n              console.log(\"IN GET DATA ERROR\",token);\r\n              console.log(error);\r\n              \r\n          }\r\n      });\r\n      };\r\n    const token = window.sessionStorage.getItem('token');\r\n    const refresh = window.sessionStorage.getItem('refresh');\r\n    if (token) {\r\n      setCurrToken(token);\r\n      fetchData(token);\r\n      if(refresh){\r\n        setRefreshCurrToken(refresh);\r\n      };\r\n    };\r\n  }, []);\r\n\r\n\r\n  const updateToken = (token,refresh) => {\r\n    window.sessionStorage.setItem('token', token);\r\n    window.sessionStorage.setItem('refresh', refresh);\r\n    setCurrToken(token);\r\n    setRefreshCurrToken(refresh);\r\n  };\r\n\r\n\r\n  const JustToken = (token) => {\r\n    window.sessionStorage.setItem('token', token);\r\n    setCurrToken(token);\r\n  };\r\n\r\n  //TODO: Move the last four routes into home.js without it breaking.... Why do they all need to be in one place?\r\n    return (\r\n    <TokenContext.Provider value={{currtoken}}>\r\n      <RefreshTokenContext.Provider value={{refreshcurrtoken}}>\r\n      <Router>\r\n          <Switch>\r\n            <Route exact path=\"/\">\r\n              {currtoken ? <Redirect to=\"/home\"/> : <Login/>}\r\n            </Route>\r\n            <Route exact path=\"/home\">\r\n              {currtoken ? <div> <NavBar displayname={displayname} imageurl = {imageurl} /><Home/> </div>: <Redirect to=\"/\"/> }\r\n            </Route>\r\n            <Route path=\"/callbackpage\">\r\n              {currtoken ? <Redirect to=\"/home\"/> : <Callback updateToken={updateToken} JustToken={JustToken}/> }\r\n            </Route>\r\n            <Route exact path=\"/chat\">\r\n            <NavBar displayname={displayname} imageurl = {imageurl} /> <Chat/>\r\n            </Route>\r\n            <Route exact path=\"/party\">\r\n            <NavBar displayname={displayname} imageurl = {imageurl} /> <Party/>\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n        </RefreshTokenContext.Provider>\r\n    </TokenContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}